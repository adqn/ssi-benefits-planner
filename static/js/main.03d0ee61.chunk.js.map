{"version":3,"sources":["data/allBenefitsByYears.js","helpers/benefitsGetter.js","Components/RangeSlider/RangeSlider.js","Components/BenefitsGraphs.js","App.styled.js","Components/Dropdown.js","App.js","reportWebVitals.js","index.js"],"names":["allBenefitsByYears","allDelayedBenefitsByYears","getBenefitsByYear","birthYear","year","i","length","toString","getBenefitReductions","benefitsTables","reductions","percentages","Array","apply","data","months","map","_","parseFloat","applicableMonths","applicableYearsMonths","yearsMonths","getMaxBenefits","maxAge","totalEarnings","delayed","benefitsReductions","benefitsRange","earningsByStartAge","monthlyBenefit","push","age","earnings","SliderContainer","styled","div","props","width","RangeSlider","setParentValue","range","visibleRange","useState","value","setValue","max","useEffect","min","style","type","onChange","e","target","LineGraph","setAge","monthlyData","find","row","monthlyDataDelayed","startAgeYearsMonths","startAgeMonths","fullAgeYearsMonths","fullAgeMonths","applicableAges","benefitPercent","spouseReductionPercent","applicableDelayedAges","allApplicableAges","concat","monthlyBenefitAmounts","amount","yScale","d3","domain","xScaleMain","d","getXPos","xBelowFullAge","xFullAge","xAboveFullAge","getLineCoordinates","selection","pointIdFrom","pointIdTo","defaultPoint","attr","match","x","each","point","this","y","svg","chart","append","call","scale","tickSize","tickSizeOuter","tickFormat","tickValues","yAxis","xAxis","height","marginTop","text","marginLeft","selectAll","enter","getPointIds","remove","getSelectedAgeTick","paddingRight","className","MaxAgeGraph","setMaxAge","maxAgeEarnings","React","useMemo","parseInt","xScale","line","curve","datum","DelayedMaxAgeGraph","monthlyAmount","delayedMaxAgeEarnings","id","DocumentContainer","TextContainer","GraphContainer","Dropdown","options","option","birthYears","App","setBirthYear","href","slice","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03d0ee61.chunk.js","sourcesContent":["export const allBenefitsByYears = [{ \"year\": \"1943\", \"data\": { \"yearsMonths\": [[\"62\", \"75.0%\", \"35.0%\"], [\"62 + 1 month\", \"75.4\", \"35.2\"], [\"62 + 2 months\", \"75.8\", \"35.4\"], [\"62 + 3 months\", \"76.3\", \"35.6\"], [\"62 + 4 months\", \"76.7\", \"35.8\"], [\"62 + 5 months\", \"77.1\", \"36.0\"], [\"62 + 6 months\", \"77.5\", \"36.3\"], [\"62 + 7 months\", \"77.9\", \"36.5\"], [\"62 + 8 months\", \"78.3\", \"36.7\"], [\"62 + 9 months\", \"78.8\", \"36.9\"], [\"62 + 10 months\", \"79.2\", \"37.1\"], [\"62 + 11 months\", \"79.6\", \"37.3\"], [\"63\", \"80.0\", \"37.5\"], [\"63 + 1 month\", \"80.6\", \"37.8\"], [\"63 + 2 months\", \"81.1\", \"38.2\"], [\"63 + 3 months\", \"81.7\", \"38.5\"], [\"63 + 4 months\", \"82.2\", \"38.9\"], [\"63 + 5 months\", \"82.8\", \"39.2\"], [\"63 + 6 months\", \"83.3\", \"39.6\"], [\"63 + 7 months\", \"83.9\", \"39.9\"], [\"63 + 8 months\", \"84.4\", \"40.3\"], [\"63 + 9 months\", \"85.0\", \"40.6\"], [\"63 + 10 months\", \"85.6\", \"41.0\"], [\"63 + 11 months\", \"86.1\", \"41.3\"], [\"64\", \"86.7\", \"41.7\"], [\"64 + 1 month\", \"87.2\", \"42.0\"], [\"64 + 2 months\", \"87.8\", \"42.4\"], [\"64 + 3 months\", \"88.3\", \"42.7\"], [\"64 + 4 months\", \"88.9\", \"43.1\"], [\"64 + 5 months\", \"89.4\", \"43.4\"], [\"64 + 6 months\", \"90.0\", \"43.8\"], [\"64 + 7 months\", \"90.6\", \"44.1\"], [\"64 + 8 months\", \"91.1\", \"44.4\"], [\"64 + 9 months\", \"91.7\", \"44.8\"], [\"64 + 10 months\", \"92.2\", \"45.1\"], [\"64 + 11 months\", \"92.8\", \"45.5\"], [\"65\", \"93.3\", \"45.8\"], [\"65 + 1 month\", \"93.9\", \"46.2\"], [\"65 + 2 months\", \"94.4\", \"46.5\"], [\"65 + 3 months\", \"95.0\", \"46.9\"], [\"65 + 4 months\", \"95.6\", \"47.2\"], [\"65 + 5 months\", \"96.1\", \"47.6\"], [\"65 + 6 months\", \"96.7\", \"47.9\"], [\"65 + 7 months\", \"97.2\", \"48.3\"], [\"65 + 8 months\", \"97.8\", \"48.6\"], [\"65 + 9 months\", \"98.3\", \"49.0\"], [\"65 + 10 months\", \"98.9\", \"49.3\"], [\"65 + 11 months\", \"99.4\", \"49.7\"], [\"66 \", \"100.0\", \"50.0\"]], \"months\": [[744, \"75.0%\", \"35.0%\"], [745, \"75.4\", \"35.2\"], [746, \"75.8\", \"35.4\"], [747, \"76.3\", \"35.6\"], [748, \"76.7\", \"35.8\"], [749, \"77.1\", \"36.0\"], [750, \"77.5\", \"36.3\"], [751, \"77.9\", \"36.5\"], [752, \"78.3\", \"36.7\"], [753, \"78.8\", \"36.9\"], [754, \"79.2\", \"37.1\"], [755, \"79.6\", \"37.3\"], [756, \"80.0\", \"37.5\"], [757, \"80.6\", \"37.8\"], [758, \"81.1\", \"38.2\"], [759, \"81.7\", \"38.5\"], [760, \"82.2\", \"38.9\"], [761, \"82.8\", \"39.2\"], [762, \"83.3\", \"39.6\"], [763, \"83.9\", \"39.9\"], [764, \"84.4\", \"40.3\"], [765, \"85.0\", \"40.6\"], [766, \"85.6\", \"41.0\"], [767, \"86.1\", \"41.3\"], [768, \"86.7\", \"41.7\"], [769, \"87.2\", \"42.0\"], [770, \"87.8\", \"42.4\"], [771, \"88.3\", \"42.7\"], [772, \"88.9\", \"43.1\"], [773, \"89.4\", \"43.4\"], [774, \"90.0\", \"43.8\"], [775, \"90.6\", \"44.1\"], [776, \"91.1\", \"44.4\"], [777, \"91.7\", \"44.8\"], [778, \"92.2\", \"45.1\"], [779, \"92.8\", \"45.5\"], [780, \"93.3\", \"45.8\"], [781, \"93.9\", \"46.2\"], [782, \"94.4\", \"46.5\"], [783, \"95.0\", \"46.9\"], [784, \"95.6\", \"47.2\"], [785, \"96.1\", \"47.6\"], [786, \"96.7\", \"47.9\"], [787, \"97.2\", \"48.3\"], [788, \"97.8\", \"48.6\"], [789, \"98.3\", \"49.0\"], [790, \"98.9\", \"49.3\"], [791, \"99.4\", \"49.7\"], [792, \"100.0\", \"50.0\"]] } },\n{ \"year\": \"1955\", \"data\": { \"yearsMonths\": [[\"62\", \"74.2%\", \"34.6%\"], [\"62 + 1 month\", \"74.6\", \"34.8\"], [\"62 + 2 months\", \"75.0\", \"35.0\"], [\"62 + 3 months\", \"75.4\", \"35.2\"], [\"62 + 4 months\", \"75.8\", \"35.4\"], [\"62 + 5 months\", \"76.3\", \"35.6\"], [\"62 + 6 months\", \"76.7\", \"35.8\"], [\"62 + 7 months\", \"77.1\", \"36.0\"], [\"62 + 8 months\", \"77.5\", \"36.3\"], [\"62 + 9 months\", \"77.9\", \"36.5\"], [\"62 + 10 months\", \"78.3\", \"36.7\"], [\"62 + 11 months\", \"78.8\", \"36.9\"], [\"63\", \"79.2\", \"37.1\"], [\"63 + 1 month\", \"79.6\", \"37.3\"], [\"63 + 2 months\", \"80.0\", \"37.5\"], [\"63 + 3 months\", \"80.6\", \"37.8\"], [\"63 + 4 months\", \"81.1\", \"38.2\"], [\"63 + 5 months\", \"81.7\", \"38.5\"], [\"63 + 6 months\", \"82.2\", \"38.9\"], [\"63 + 7 months\", \"82.8\", \"39.2\"], [\"63 + 8 months\", \"83.3\", \"39.6\"], [\"63 + 9 months\", \"83.9\", \"39.9\"], [\"63 + 10 months\", \"84.4\", \"40.3\"], [\"63 + 11 months\", \"85.0\", \"40.6\"], [\"64\", \"85.6\", \"41.0\"], [\"64 + 1 month\", \"86.1\", \"41.3\"], [\"64 + 2 months\", \"86.7\", \"41.7\"], [\"64 + 3 months\", \"87.2\", \"42.0\"], [\"64 + 4 months\", \"87.8\", \"42.4\"], [\"64 + 5 months\", \"88.3\", \"42.7\"], [\"64 + 6 months\", \"88.9\", \"43.1\"], [\"64 + 7 months\", \"89.4\", \"43.4\"], [\"64 + 8 months\", \"90.0\", \"43.8\"], [\"64 + 9 months\", \"90.6\", \"44.1\"], [\"64 + 10 months\", \"91.1\", \"44.4\"], [\"64 + 11 months\", \"91.7\", \"44.8\"], [\"65\", \"92.2\", \"45.1\"], [\"65 + 1 month\", \"92.8\", \"45.5\"], [\"65 + 2 months\", \"93.3\", \"45.8\"], [\"65 + 3 months\", \"93.9\", \"46.2\"], [\"65 + 4 months\", \"94.4\", \"46.5\"], [\"65 + 5 months\", \"95.0\", \"46.9\"], [\"65 + 6 months\", \"95.6\", \"47.2\"], [\"65 + 7 months\", \"96.1\", \"47.6\"], [\"65 + 8 months\", \"96.7\", \"47.9\"], [\"65 + 9 months\", \"97.2\", \"48.3\"], [\"65 + 10 months\", \"97.8\", \"48.6\"], [\"65 + 11 months\", \"98.3\", \"49.0\"], [\"66 \", \"98.9\", \"49.3\"], [\"66 + 1 month\", \"99.4\", \"49.7\"], [\"66 + 2 months\", \"100.0\", \"50.0\"]], \"months\": [[744, \"74.2%\", \"34.6%\"], [745, \"74.6\", \"34.8\"], [746, \"75.0\", \"35.0\"], [747, \"75.4\", \"35.2\"], [748, \"75.8\", \"35.4\"], [749, \"76.3\", \"35.6\"], [750, \"76.7\", \"35.8\"], [751, \"77.1\", \"36.0\"], [752, \"77.5\", \"36.3\"], [753, \"77.9\", \"36.5\"], [754, \"78.3\", \"36.7\"], [755, \"78.8\", \"36.9\"], [756, \"79.2\", \"37.1\"], [757, \"79.6\", \"37.3\"], [758, \"80.0\", \"37.5\"], [759, \"80.6\", \"37.8\"], [760, \"81.1\", \"38.2\"], [761, \"81.7\", \"38.5\"], [762, \"82.2\", \"38.9\"], [763, \"82.8\", \"39.2\"], [764, \"83.3\", \"39.6\"], [765, \"83.9\", \"39.9\"], [766, \"84.4\", \"40.3\"], [767, \"85.0\", \"40.6\"], [768, \"85.6\", \"41.0\"], [769, \"86.1\", \"41.3\"], [770, \"86.7\", \"41.7\"], [771, \"87.2\", \"42.0\"], [772, \"87.8\", \"42.4\"], [773, \"88.3\", \"42.7\"], [774, \"88.9\", \"43.1\"], [775, \"89.4\", \"43.4\"], [776, \"90.0\", \"43.8\"], [777, \"90.6\", \"44.1\"], [778, \"91.1\", \"44.4\"], [779, \"91.7\", \"44.8\"], [780, \"92.2\", \"45.1\"], [781, \"92.8\", \"45.5\"], [782, \"93.3\", \"45.8\"], [783, \"93.9\", \"46.2\"], [784, \"94.4\", \"46.5\"], [785, \"95.0\", \"46.9\"], [786, \"95.6\", \"47.2\"], [787, \"96.1\", \"47.6\"], [788, \"96.7\", \"47.9\"], [789, \"97.2\", \"48.3\"], [790, \"97.8\", \"48.6\"], [791, \"98.3\", \"49.0\"], [792, \"98.9\", \"49.3\"], [793, \"99.4\", \"49.7\"], [794, \"100.0\", \"50.0\"]] } },\n{ \"year\": \"1956\", \"data\": { \"yearsMonths\": [[\"62\", \"73.3%\", \"34.2%\"], [\"62 + 1 month\", \"73.8\", \"34.4\"], [\"62 + 2 months\", \"74.2\", \"34.6\"], [\"62 + 3 months\", \"74.6\", \"34.8\"], [\"62 + 4 months\", \"75.0\", \"35.0\"], [\"62 + 5 months\", \"75.4\", \"35.2\"], [\"62 + 6 months\", \"75.8\", \"35.4\"], [\"62 + 7 months\", \"76.3\", \"35.6\"], [\"62 + 8 months\", \"76.7\", \"35.8\"], [\"62 + 9 months\", \"77.1\", \"36.0\"], [\"62 + 10 months\", \"77.5\", \"36.3\"], [\"62 + 11 months\", \"77.9\", \"36.5\"], [\"63\", \"78.3\", \"36.7\"], [\"63 + 1 month\", \"78.8\", \"36.9\"], [\"63 + 2 months\", \"79.2\", \"37.1\"], [\"63 + 3 months\", \"79.6\", \"37.3\"], [\"63 + 4 months\", \"80.0\", \"37.5\"], [\"63 + 5 months\", \"80.6\", \"37.8\"], [\"63 + 6 months\", \"81.1\", \"38.2\"], [\"63 + 7 months\", \"81.7\", \"38.5\"], [\"63 + 8 months\", \"82.2\", \"38.9\"], [\"63 + 9 months\", \"82.8\", \"39.2\"], [\"63 + 10 months\", \"83.3\", \"39.6\"], [\"63 + 11 months\", \"83.9\", \"39.9\"], [\"64\", \"84.4\", \"40.3\"], [\"64 + 1 month\", \"85.0\", \"40.6\"], [\"64 + 2 months\", \"85.6\", \"41.0\"], [\"64 + 3 months\", \"86.1\", \"41.3\"], [\"64 + 4 months\", \"86.7\", \"41.7\"], [\"64 + 5 months\", \"87.2\", \"42.0\"], [\"64 + 6 months\", \"87.8\", \"42.4\"], [\"64 + 7 months\", \"88.3\", \"42.7\"], [\"64 + 8 months\", \"88.9\", \"43.1\"], [\"64 + 9 months\", \"89.4\", \"43.4\"], [\"64 + 10 months\", \"90.0\", \"43.8\"], [\"64 + 11 months\", \"90.6\", \"44.1\"], [\"65\", \"91.1\", \"44.4\"], [\"65 + 1 month\", \"91.7\", \"44.8\"], [\"65 + 2 months\", \"92.2\", \"45.1\"], [\"65 + 3 months\", \"92.8\", \"45.5\"], [\"65 + 4 months\", \"93.3\", \"45.8\"], [\"65 + 5 months\", \"93.9\", \"46.2\"], [\"65 + 6 months\", \"94.4\", \"46.5\"], [\"65 + 7 months\", \"95.0\", \"46.9\"], [\"65 + 8 months\", \"95.6\", \"47.2\"], [\"65 + 9 months\", \"96.1\", \"47.6\"], [\"65 + 10 months\", \"96.7\", \"47.9\"], [\"65 + 11 months\", \"97.2\", \"48.3\"], [\"66 \", \"97.8\", \"48.6\"], [\"66 + 1 month\", \"98.3\", \"49.0\"], [\"66 + 2 months\", \"98.9\", \"49.3\"], [\"66 + 3 months\", \"99.4\", \"49.7\"], [\"66 + 4 months\", \"100.0\", \"50.0\"]], \"months\": [[744, \"73.3%\", \"34.2%\"], [745, \"73.8\", \"34.4\"], [746, \"74.2\", \"34.6\"], [747, \"74.6\", \"34.8\"], [748, \"75.0\", \"35.0\"], [749, \"75.4\", \"35.2\"], [750, \"75.8\", \"35.4\"], [751, \"76.3\", \"35.6\"], [752, \"76.7\", \"35.8\"], [753, \"77.1\", \"36.0\"], [754, \"77.5\", \"36.3\"], [755, \"77.9\", \"36.5\"], [756, \"78.3\", \"36.7\"], [757, \"78.8\", \"36.9\"], [758, \"79.2\", \"37.1\"], [759, \"79.6\", \"37.3\"], [760, \"80.0\", \"37.5\"], [761, \"80.6\", \"37.8\"], [762, \"81.1\", \"38.2\"], [763, \"81.7\", \"38.5\"], [764, \"82.2\", \"38.9\"], [765, \"82.8\", \"39.2\"], [766, \"83.3\", \"39.6\"], [767, \"83.9\", \"39.9\"], [768, \"84.4\", \"40.3\"], [769, \"85.0\", \"40.6\"], [770, \"85.6\", \"41.0\"], [771, \"86.1\", \"41.3\"], [772, \"86.7\", \"41.7\"], [773, \"87.2\", \"42.0\"], [774, \"87.8\", \"42.4\"], [775, \"88.3\", \"42.7\"], [776, \"88.9\", \"43.1\"], [777, \"89.4\", \"43.4\"], [778, \"90.0\", \"43.8\"], [779, \"90.6\", \"44.1\"], [780, \"91.1\", \"44.4\"], [781, \"91.7\", \"44.8\"], [782, \"92.2\", \"45.1\"], [783, \"92.8\", \"45.5\"], [784, \"93.3\", \"45.8\"], [785, \"93.9\", \"46.2\"], [786, \"94.4\", \"46.5\"], [787, \"95.0\", \"46.9\"], [788, \"95.6\", \"47.2\"], [789, \"96.1\", \"47.6\"], [790, \"96.7\", \"47.9\"], [791, \"97.2\", \"48.3\"], [792, \"97.8\", \"48.6\"], [793, \"98.3\", \"49.0\"], [794, \"98.9\", \"49.3\"], [795, \"99.4\", \"49.7\"], [796, \"100.0\", \"50.0\"]] } },\n{ \"year\": \"1957\", \"data\": { \"yearsMonths\": [[\"62\", \"72.5%\", \"33.8%\"], [\"62 + 1 month\", \"72.9\", \"34.0\"], [\"62 + 2 months\", \"73.3\", \"34.2\"], [\"62 + 3 months\", \"73.8\", \"34.4\"], [\"62 + 4 months\", \"74.2\", \"34.6\"], [\"62 + 5 months\", \"74.6\", \"34.8\"], [\"62 + 6 months\", \"75.0\", \"35.0\"], [\"62 + 7 months\", \"75.4\", \"35.2\"], [\"62 + 8 months\", \"75.8\", \"35.4\"], [\"62 + 9 months\", \"76.3\", \"35.6\"], [\"62 + 10 months\", \"76.7\", \"35.8\"], [\"62 + 11 months\", \"77.1\", \"36.0\"], [\"63\", \"77.5\", \"36.3\"], [\"63 + 1 month\", \"77.9\", \"36.5\"], [\"63 + 2 months\", \"78.3\", \"36.7\"], [\"63 + 3 months\", \"78.8\", \"36.9\"], [\"63 + 4 months\", \"79.2\", \"37.1\"], [\"63 + 5 months\", \"79.6\", \"37.3\"], [\"63 + 6 months\", \"80.0\", \"37.5\"], [\"63 + 7 months\", \"80.6\", \"37.8\"], [\"63 + 8 months\", \"81.1\", \"38.2\"], [\"63 + 9 months\", \"81.7\", \"38.5\"], [\"63 + 10 months\", \"82.2\", \"38.9\"], [\"63 + 11 months\", \"82.8\", \"39.2\"], [\"64\", \"83.3\", \"39.6\"], [\"64 + 1 month\", \"83.9\", \"39.9\"], [\"64 + 2 months\", \"84.4\", \"40.3\"], [\"64 + 3 months\", \"85.0\", \"40.6\"], [\"64 + 4 months\", \"85.6\", \"41.0\"], [\"64 + 5 months\", \"86.1\", \"41.3\"], [\"64 + 6 months\", \"86.7\", \"41.7\"], [\"64 + 7 months\", \"87.2\", \"42.0\"], [\"64 + 8 months\", \"87.8\", \"42.4\"], [\"64 + 9 months\", \"88.3\", \"42.7\"], [\"64 + 10 months\", \"88.9\", \"43.1\"], [\"64 + 11 months\", \"89.4\", \"43.4\"], [\"65\", \"90.0\", \"43.8\"], [\"65 + 1 month\", \"90.6\", \"44.1\"], [\"65 + 2 months\", \"91.1\", \"44.4\"], [\"65 + 3 months\", \"91.7\", \"44.8\"], [\"65 + 4 months\", \"92.2\", \"45.1\"], [\"65 + 5 months\", \"92.8\", \"45.5\"], [\"65 + 6 months\", \"93.3\", \"45.8\"], [\"65 + 7 months\", \"93.9\", \"46.2\"], [\"65 + 8 months\", \"94.4\", \"46.5\"], [\"65 + 9 months\", \"95.0\", \"46.9\"], [\"65 + 10 months\", \"95.6\", \"47.2\"], [\"65 + 11 months\", \"96.1\", \"47.6\"], [\"66 \", \"96.7\", \"47.9\"], [\"66 + 1 month\", \"97.2\", \"48.3\"], [\"66 + 2 months\", \"97.8\", \"48.6\"], [\"66 + 3 months\", \"98.3\", \"49.0\"], [\"66 + 4 months\", \"98.9\", \"49.3\"], [\"66 + 5 months\", \"99.4\", \"49.7\"], [\"66 + 6 months\", \"100.0\", \"50.0\"]], \"months\": [[744, \"72.5%\", \"33.8%\"], [745, \"72.9\", \"34.0\"], [746, \"73.3\", \"34.2\"], [747, \"73.8\", \"34.4\"], [748, \"74.2\", \"34.6\"], [749, \"74.6\", \"34.8\"], [750, \"75.0\", \"35.0\"], [751, \"75.4\", \"35.2\"], [752, \"75.8\", \"35.4\"], [753, \"76.3\", \"35.6\"], [754, \"76.7\", \"35.8\"], [755, \"77.1\", \"36.0\"], [756, \"77.5\", \"36.3\"], [757, \"77.9\", \"36.5\"], [758, \"78.3\", \"36.7\"], [759, \"78.8\", \"36.9\"], [760, \"79.2\", \"37.1\"], [761, \"79.6\", \"37.3\"], [762, \"80.0\", \"37.5\"], [763, \"80.6\", \"37.8\"], [764, \"81.1\", \"38.2\"], [765, \"81.7\", \"38.5\"], [766, \"82.2\", \"38.9\"], [767, \"82.8\", \"39.2\"], [768, \"83.3\", \"39.6\"], [769, \"83.9\", \"39.9\"], [770, \"84.4\", \"40.3\"], [771, \"85.0\", \"40.6\"], [772, \"85.6\", \"41.0\"], [773, \"86.1\", \"41.3\"], [774, \"86.7\", \"41.7\"], [775, \"87.2\", \"42.0\"], [776, \"87.8\", \"42.4\"], [777, \"88.3\", \"42.7\"], [778, \"88.9\", \"43.1\"], [779, \"89.4\", \"43.4\"], [780, \"90.0\", \"43.8\"], [781, \"90.6\", \"44.1\"], [782, \"91.1\", \"44.4\"], [783, \"91.7\", \"44.8\"], [784, \"92.2\", \"45.1\"], [785, \"92.8\", \"45.5\"], [786, \"93.3\", \"45.8\"], [787, \"93.9\", \"46.2\"], [788, \"94.4\", \"46.5\"], [789, \"95.0\", \"46.9\"], [790, \"95.6\", \"47.2\"], [791, \"96.1\", \"47.6\"], [792, \"96.7\", \"47.9\"], [793, \"97.2\", \"48.3\"], [794, \"97.8\", \"48.6\"], [795, \"98.3\", \"49.0\"], [796, \"98.9\", \"49.3\"], [797, \"99.4\", \"49.7\"], [798, \"100.0\", \"50.0\"]] } },\n{ \"year\": \"1958\", \"data\": { \"yearsMonths\": [[\"62\", \"71.7%\", \"33.3%\"], [\"62 + 1 month\", \"72.1\", \"33.5\"], [\"62 + 2 months\", \"72.5\", \"33.8\"], [\"62 + 3 months\", \"72.9\", \"34.0\"], [\"62 + 4 months\", \"73.3\", \"34.2\"], [\"62 + 5 months\", \"73.8\", \"34.4\"], [\"62 + 6 months\", \"74.2\", \"34.6\"], [\"62 + 7 months\", \"74.6\", \"34.8\"], [\"62 + 8 months\", \"75.0\", \"35.0\"], [\"62 + 9 months\", \"75.4\", \"35.2\"], [\"62 + 10 months\", \"75.8\", \"35.4\"], [\"62 + 11 months\", \"76.3\", \"35.6\"], [\"63\", \"76.7\", \"35.8\"], [\"63 + 1 month\", \"77.1\", \"36.0\"], [\"63 + 2 months\", \"77.5\", \"36.3\"], [\"63 + 3 months\", \"77.9\", \"36.5\"], [\"63 + 4 months\", \"78.3\", \"36.7\"], [\"63 + 5 months\", \"78.8\", \"36.9\"], [\"63 + 6 months\", \"79.2\", \"37.1\"], [\"63 + 7 months\", \"79.6\", \"37.3\"], [\"63 + 8 months\", \"80.0\", \"37.5\"], [\"63 + 9 months\", \"80.6\", \"37.8\"], [\"63 + 10 months\", \"81.1\", \"38.2\"], [\"63 + 11 months\", \"81.7\", \"38.5\"], [\"64\", \"82.2\", \"38.9\"], [\"64 + 1 month\", \"82.8\", \"39.2\"], [\"64 + 2 months\", \"83.3\", \"39.6\"], [\"64 + 3 months\", \"83.9\", \"39.9\"], [\"64 + 4 months\", \"84.4\", \"40.3\"], [\"64 + 5 months\", \"85.0\", \"40.6\"], [\"64 + 6 months\", \"85.6\", \"41.0\"], [\"64 + 7 months\", \"86.1\", \"41.3\"], [\"64 + 8 months\", \"86.7\", \"41.7\"], [\"64 + 9 months\", \"87.2\", \"42.0\"], [\"64 + 10 months\", \"87.8\", \"42.4\"], [\"64 + 11 months\", \"88.3\", \"42.7\"], [\"65\", \"88.9\", \"43.1\"], [\"65 + 1 month\", \"89.4\", \"43.4\"], [\"65 + 2 months\", \"90.0\", \"43.8\"], [\"65 + 3 months\", \"90.6\", \"44.1\"], [\"65 + 4 months\", \"91.1\", \"44.4\"], [\"65 + 5 months\", \"91.7\", \"44.8\"], [\"65 + 6 months\", \"92.2\", \"45.1\"], [\"65 + 7 months\", \"92.8\", \"45.5\"], [\"65 + 8 months\", \"93.3\", \"45.8\"], [\"65 + 9 months\", \"93.9\", \"46.2\"], [\"65 + 10 months\", \"94.4\", \"46.5\"], [\"65 + 11 months\", \"95.0\", \"46.9\"], [\"66 \", \"95.6\", \"47.2\"], [\"66 + 1 month\", \"96.1\", \"47.6\"], [\"66 + 2 months\", \"96.7\", \"47.9\"], [\"66 + 3 months\", \"97.2\", \"48.3\"], [\"66 + 4 months\", \"97.8\", \"48.6\"], [\"66 + 5 months\", \"98.3\", \"49.0\"], [\"66 + 6 months\", \"98.9\", \"49.3\"], [\"66 + 7 months\", \"99.4\", \"49.7\"], [\"66 + 8 months\", \"100.0\", \"50.0\"]], \"months\": [[744, \"71.7%\", \"33.3%\"], [745, \"72.1\", \"33.5\"], [746, \"72.5\", \"33.8\"], [747, \"72.9\", \"34.0\"], [748, \"73.3\", \"34.2\"], [749, \"73.8\", \"34.4\"], [750, \"74.2\", \"34.6\"], [751, \"74.6\", \"34.8\"], [752, \"75.0\", \"35.0\"], [753, \"75.4\", \"35.2\"], [754, \"75.8\", \"35.4\"], [755, \"76.3\", \"35.6\"], [756, \"76.7\", \"35.8\"], [757, \"77.1\", \"36.0\"], [758, \"77.5\", \"36.3\"], [759, \"77.9\", \"36.5\"], [760, \"78.3\", \"36.7\"], [761, \"78.8\", \"36.9\"], [762, \"79.2\", \"37.1\"], [763, \"79.6\", \"37.3\"], [764, \"80.0\", \"37.5\"], [765, \"80.6\", \"37.8\"], [766, \"81.1\", \"38.2\"], [767, \"81.7\", \"38.5\"], [768, \"82.2\", \"38.9\"], [769, \"82.8\", \"39.2\"], [770, \"83.3\", \"39.6\"], [771, \"83.9\", \"39.9\"], [772, \"84.4\", \"40.3\"], [773, \"85.0\", \"40.6\"], [774, \"85.6\", \"41.0\"], [775, \"86.1\", \"41.3\"], [776, \"86.7\", \"41.7\"], [777, \"87.2\", \"42.0\"], [778, \"87.8\", \"42.4\"], [779, \"88.3\", \"42.7\"], [780, \"88.9\", \"43.1\"], [781, \"89.4\", \"43.4\"], [782, \"90.0\", \"43.8\"], [783, \"90.6\", \"44.1\"], [784, \"91.1\", \"44.4\"], [785, \"91.7\", \"44.8\"], [786, \"92.2\", \"45.1\"], [787, \"92.8\", \"45.5\"], [788, \"93.3\", \"45.8\"], [789, \"93.9\", \"46.2\"], [790, \"94.4\", \"46.5\"], [791, \"95.0\", \"46.9\"], [792, \"95.6\", \"47.2\"], [793, \"96.1\", \"47.6\"], [794, \"96.7\", \"47.9\"], [795, \"97.2\", \"48.3\"], [796, \"97.8\", \"48.6\"], [797, \"98.3\", \"49.0\"], [798, \"98.9\", \"49.3\"], [799, \"99.4\", \"49.7\"], [800, \"100.0\", \"50.0\"]] } },\n{ \"year\": \"1959\", \"data\": { \"yearsMonths\": [[\"62\", \"70.8%\", \"32.9%\"], [\"62 + 1 month\", \"71.3\", \"33.1\"], [\"62 + 2 months\", \"71.7\", \"33.3\"], [\"62 + 3 months\", \"72.1\", \"33.5\"], [\"62 + 4 months\", \"72.5\", \"33.8\"], [\"62 + 5 months\", \"72.9\", \"34.0\"], [\"62 + 6 months\", \"73.3\", \"34.2\"], [\"62 + 7 months\", \"73.8\", \"34.4\"], [\"62 + 8 months\", \"74.2\", \"34.6\"], [\"62 + 9 months\", \"74.6\", \"34.8\"], [\"62 + 10 months\", \"75.0\", \"35.0\"], [\"62 + 11 months\", \"75.4\", \"35.2\"], [\"63\", \"75.8\", \"35.4\"], [\"63 + 1 month\", \"76.3\", \"35.6\"], [\"63 + 2 months\", \"76.7\", \"35.8\"], [\"63 + 3 months\", \"77.1\", \"36.0\"], [\"63 + 4 months\", \"77.5\", \"36.3\"], [\"63 + 5 months\", \"77.9\", \"36.5\"], [\"63 + 6 months\", \"78.3\", \"36.7\"], [\"63 + 7 months\", \"78.8\", \"36.9\"], [\"63 + 8 months\", \"79.2\", \"37.1\"], [\"63 + 9 months\", \"79.6\", \"37.3\"], [\"63 + 10 months\", \"80.0\", \"37.5\"], [\"63 + 11 months\", \"80.6\", \"37.8\"], [\"64\", \"81.1\", \"38.2\"], [\"64 + 1 month\", \"81.7\", \"38.5\"], [\"64 + 2 months\", \"82.2\", \"38.9\"], [\"64 + 3 months\", \"82.8\", \"39.2\"], [\"64 + 4 months\", \"83.3\", \"39.6\"], [\"64 + 5 months\", \"83.9\", \"39.9\"], [\"64 + 6 months\", \"84.4\", \"40.3\"], [\"64 + 7 months\", \"85.0\", \"40.6\"], [\"64 + 8 months\", \"85.6\", \"41.0\"], [\"64 + 9 months\", \"86.1\", \"41.3\"], [\"64 + 10 months\", \"86.7\", \"41.7\"], [\"64 + 11 months\", \"87.2\", \"42.0\"], [\"65\", \"87.8\", \"42.4\"], [\"65 + 1 month\", \"88.3\", \"42.7\"], [\"65 + 2 months\", \"88.9\", \"43.1\"], [\"65 + 3 months\", \"89.4\", \"43.4\"], [\"65 + 4 months\", \"90.0\", \"43.8\"], [\"65 + 5 months\", \"90.6\", \"44.1\"], [\"65 + 6 months\", \"91.1\", \"44.4\"], [\"65 + 7 months\", \"91.7\", \"44.8\"], [\"65 + 8 months\", \"92.2\", \"45.1\"], [\"65 + 9 months\", \"92.8\", \"45.5\"], [\"65 + 10 months\", \"93.3\", \"45.8\"], [\"65 + 11 months\", \"93.9\", \"46.2\"], [\"66 \", \"94.4\", \"46.5\"], [\"66 + 1 month\", \"95.0\", \"46.9\"], [\"66 + 2 months\", \"95.6\", \"47.2\"], [\"66 + 3 months\", \"96.1\", \"47.6\"], [\"66 + 4 months\", \"96.7\", \"47.9\"], [\"66 + 5 months\", \"97.2\", \"48.3\"], [\"66 + 6 months\", \"97.8\", \"48.6\"], [\"66 + 7 months\", \"98.3\", \"49.0\"], [\"66 + 8 months\", \"98.9\", \"49.3\"], [\"66 + 9 months\", \"99.4\", \"49.7\"], [\"66 + 10 months\", \"100.0\", \"50.0\"]], \"months\": [[744, \"70.8%\", \"32.9%\"], [745, \"71.3\", \"33.1\"], [746, \"71.7\", \"33.3\"], [747, \"72.1\", \"33.5\"], [748, \"72.5\", \"33.8\"], [749, \"72.9\", \"34.0\"], [750, \"73.3\", \"34.2\"], [751, \"73.8\", \"34.4\"], [752, \"74.2\", \"34.6\"], [753, \"74.6\", \"34.8\"], [754, \"75.0\", \"35.0\"], [755, \"75.4\", \"35.2\"], [756, \"75.8\", \"35.4\"], [757, \"76.3\", \"35.6\"], [758, \"76.7\", \"35.8\"], [759, \"77.1\", \"36.0\"], [760, \"77.5\", \"36.3\"], [761, \"77.9\", \"36.5\"], [762, \"78.3\", \"36.7\"], [763, \"78.8\", \"36.9\"], [764, \"79.2\", \"37.1\"], [765, \"79.6\", \"37.3\"], [766, \"80.0\", \"37.5\"], [767, \"80.6\", \"37.8\"], [768, \"81.1\", \"38.2\"], [769, \"81.7\", \"38.5\"], [770, \"82.2\", \"38.9\"], [771, \"82.8\", \"39.2\"], [772, \"83.3\", \"39.6\"], [773, \"83.9\", \"39.9\"], [774, \"84.4\", \"40.3\"], [775, \"85.0\", \"40.6\"], [776, \"85.6\", \"41.0\"], [777, \"86.1\", \"41.3\"], [778, \"86.7\", \"41.7\"], [779, \"87.2\", \"42.0\"], [780, \"87.8\", \"42.4\"], [781, \"88.3\", \"42.7\"], [782, \"88.9\", \"43.1\"], [783, \"89.4\", \"43.4\"], [784, \"90.0\", \"43.8\"], [785, \"90.6\", \"44.1\"], [786, \"91.1\", \"44.4\"], [787, \"91.7\", \"44.8\"], [788, \"92.2\", \"45.1\"], [789, \"92.8\", \"45.5\"], [790, \"93.3\", \"45.8\"], [791, \"93.9\", \"46.2\"], [792, \"94.4\", \"46.5\"], [793, \"95.0\", \"46.9\"], [794, \"95.6\", \"47.2\"], [795, \"96.1\", \"47.6\"], [796, \"96.7\", \"47.9\"], [797, \"97.2\", \"48.3\"], [798, \"97.8\", \"48.6\"], [799, \"98.3\", \"49.0\"], [800, \"98.9\", \"49.3\"], [801, \"99.4\", \"49.7\"], [802, \"100.0\", \"50.0\"]] } },\n{ \"year\": \"1960\", \"data\": { \"yearsMonths\": [[\"62\", \"70.0%\", \"32.5%\"], [\"62 + 1 month\", \"70.4\", \"32.7\"], [\"62 + 2 months\", \"70.8\", \"32.9\"], [\"62 + 3 months\", \"71.3\", \"33.1\"], [\"62 + 4 months\", \"71.7\", \"33.3\"], [\"62 + 5 months\", \"72.1\", \"33.5\"], [\"62 + 6 months\", \"72.5\", \"33.8\"], [\"62 + 7 months\", \"72.9\", \"34.0\"], [\"62 + 8 months\", \"73.3\", \"34.2\"], [\"62 + 9 months\", \"73.8\", \"34.4\"], [\"62 + 10 months\", \"74.2\", \"34.6\"], [\"62 + 11 months\", \"74.6\", \"34.8\"], [\"63\", \"75.0\", \"35.0\"], [\"63 + 1 month\", \"75.4\", \"35.2\"], [\"63 + 2 months\", \"75.8\", \"35.4\"], [\"63 + 3 months\", \"76.3\", \"35.6\"], [\"63 + 4 months\", \"76.7\", \"35.8\"], [\"63 + 5 months\", \"77.1\", \"36.0\"], [\"63 + 6 months\", \"77.5\", \"36.3\"], [\"63 + 7 months\", \"77.9\", \"36.5\"], [\"63 + 8 months\", \"78.3\", \"36.7\"], [\"63 + 9 months\", \"78.8\", \"36.9\"], [\"63 + 10 months\", \"79.2\", \"37.1\"], [\"63 + 11 months \", \"79.6\", \"37.3\"], [\"64\", \"80.0\", \"37.5\"], [\"64 + 1 month\", \"80.6\", \"37.8\"], [\"64 + 2 months\", \"81.1\", \"38.2\"], [\"64 + 3 months\", \"81.7\", \"38.5\"], [\"64 + 4 months\", \"82.2\", \"38.9\"], [\"64 + 5 months\", \"82.8\", \"39.2\"], [\"64 + 6 months\", \"83.3\", \"39.6\"], [\"64 + 7 months\", \"83.9\", \"39.9\"], [\"64 + 8 months\", \"84.4\", \"40.3\"], [\"64 + 9 months\", \"85.0\", \"40.6\"], [\"64 + 10 months\", \"85.6\", \"41.0\"], [\"64 + 11 months\", \"86.1\", \"41.3\"], [\"65\", \"86.7\", \"41.7\"], [\"65 + 1 month\", \"87.2\", \"42.0\"], [\"65 + 2 months\", \"87.8\", \"42.4\"], [\"65 + 3 months\", \"88.3\", \"42.7\"], [\"65 + 4 months\", \"88.9\", \"43.1\"], [\"65 + 5 months\", \"89.4\", \"43.4\"], [\"65 + 6 months\", \"90.0\", \"43.8\"], [\"65 + 7 months\", \"90.6\", \"44.1\"], [\"65 + 8 months\", \"91.1\", \"44.4\"], [\"65 + 9 months\", \"91.7\", \"44.8\"], [\"65 + 10 months\", \"92.2\", \"45.1\"], [\"65 + 11 months\", \"92.8\", \"45.5\"], [\"66 \", \"93.3\", \"45.8\"], [\"66 + 1 month\", \"93.9\", \"46.2\"], [\"66 + 2 months\", \"94.4\", \"46.5\"], [\"66 + 3 months\", \"95.0\", \"46.9\"], [\"66 + 4 months\", \"95.6\", \"47.2\"], [\"66 + 5 months\", \"96.1\", \"47.6\"], [\"66 + 6 months\", \"96.7\", \"47.9\"], [\"66 + 7 months\", \"97.2\", \"48.3\"], [\"66 + 8 months\", \"97.8\", \"48.6\"], [\"66 + 9 months\", \"98.3\", \"49.0\"], [\"66 + 10 months\", \"98.9\", \"49.3\"], [\"66 + 11 months\", \"99.4\", \"49.7\"], [\"67\", \"100.0\", \"50.0\"]], \"months\": [[744, \"70.0%\", \"32.5%\"], [745, \"70.4\", \"32.7\"], [746, \"70.8\", \"32.9\"], [747, \"71.3\", \"33.1\"], [748, \"71.7\", \"33.3\"], [749, \"72.1\", \"33.5\"], [750, \"72.5\", \"33.8\"], [751, \"72.9\", \"34.0\"], [752, \"73.3\", \"34.2\"], [753, \"73.8\", \"34.4\"], [754, \"74.2\", \"34.6\"], [755, \"74.6\", \"34.8\"], [756, \"75.0\", \"35.0\"], [757, \"75.4\", \"35.2\"], [758, \"75.8\", \"35.4\"], [759, \"76.3\", \"35.6\"], [760, \"76.7\", \"35.8\"], [761, \"77.1\", \"36.0\"], [762, \"77.5\", \"36.3\"], [763, \"77.9\", \"36.5\"], [764, \"78.3\", \"36.7\"], [765, \"78.8\", \"36.9\"], [766, \"79.2\", \"37.1\"], [767, \"79.6\", \"37.3\"], [768, \"80.0\", \"37.5\"], [769, \"80.6\", \"37.8\"], [770, \"81.1\", \"38.2\"], [771, \"81.7\", \"38.5\"], [772, \"82.2\", \"38.9\"], [773, \"82.8\", \"39.2\"], [774, \"83.3\", \"39.6\"], [775, \"83.9\", \"39.9\"], [776, \"84.4\", \"40.3\"], [777, \"85.0\", \"40.6\"], [778, \"85.6\", \"41.0\"], [779, \"86.1\", \"41.3\"], [780, \"86.7\", \"41.7\"], [781, \"87.2\", \"42.0\"], [782, \"87.8\", \"42.4\"], [783, \"88.3\", \"42.7\"], [784, \"88.9\", \"43.1\"], [785, \"89.4\", \"43.4\"], [786, \"90.0\", \"43.8\"], [787, \"90.6\", \"44.1\"], [788, \"91.1\", \"44.4\"], [789, \"91.7\", \"44.8\"], [790, \"92.2\", \"45.1\"], [791, \"92.8\", \"45.5\"], [792, \"93.3\", \"45.8\"], [793, \"93.9\", \"46.2\"], [794, \"94.4\", \"46.5\"], [795, \"95.0\", \"46.9\"], [796, \"95.6\", \"47.2\"], [797, \"96.1\", \"47.6\"], [798, \"96.7\", \"47.9\"], [799, \"97.2\", \"48.3\"], [800, \"97.8\", \"48.6\"], [801, \"98.3\", \"49.0\"], [802, \"98.9\", \"49.3\"], [803, \"99.4\", \"49.7\"], [804, \"100.0\", \"50.0\"]] } }]\n\nexport const allDelayedBenefitsByYears = [{ \"year\": \"1943\", \"data\": { \"yearsMonths\": [[\"66\", \"100%\"], [\"66 + 1 month\", \"100.7%\"], [\"66 + 2 months\", \"101.3%\"], [\"66 + 3 months\", \"102.0%\"], [\"66 + 4 months\", \"102.7%\"], [\"66 + 5 months\", \"103.3%\"], [\"66 + 6 months\", \"104.0%\"], [\"66 + 7 months\", \"104.7%\"], [\"66 + 8 months\", \"105.3%\"], [\"66 + 9 months\", \"106.0%\"], [\"66 + 10 months\", \"106.7%\"], [\"66 + 11 months\", \"107.3%\"], [\"67\", \"108.0%\"], [\"67 + 1 month\", \"108.7%\"], [\"67 + 2 months\", \"109.3%\"], [\"67 + 3 months\", \"110.0%\"], [\"67 + 4 months\", \"110.7%\"], [\"67 + 5 months\", \"111.3%\"], [\"67 + 6 months\", \"112.0%\"], [\"67 + 7 months\", \"112.7%\"], [\"67 + 8 months\", \"113.3%\"], [\"67 + 9 months\", \"114.0%\"], [\"67 + 10 months\", \"114.7%\"], [\"67 + 11 months\", \"115.3%\"], [\"68\", \"116.0%\"], [\"68 + 1 month\", \"116.7%\"], [\"68 + 2 months\", \"117.3%\"], [\"68 + 3 months\", \"118.0%\"], [\"68 + 4 months\", \"118.7%\"], [\"68 + 5 months\", \"119.3%\"], [\"68 + 6 months\", \"120.0%\"], [\"68 + 7 months\", \"120.7%\"], [\"68 + 8 months\", \"121.3%\"], [\"68 + 9 months\", \"122.0%\"], [\"68 + 10 months\", \"122.7%\"], [\"68 + 11 months\", \"123.3%\"], [\"69\", \"124.0%\"], [\"69 + 1 month\", \"124.7%\"], [\"69 + 2 months\", \"125.3%\"], [\"69 + 3 months\", \"126.0%\"], [\"69 + 4 months\", \"126.7%\"], [\"69 + 5 months\", \"127.3%\"], [\"69 + 6 months\", \"128.0%\"], [\"69 + 7 months\", \"128.7%\"], [\"69 + 8 months\", \"129.3%\"], [\"69 + 9 months\", \"130.0%\"], [\"69 + 10 months\", \"130.7%\"], [\"69 + 11 months\", \"131.3%\"], [\"70 or later\", \"132.0%\"]], \"months\": [[792, \"100%\"], [793, \"100.7%\"], [794, \"101.3%\"], [795, \"102.0%\"], [796, \"102.7%\"], [797, \"103.3%\"], [798, \"104.0%\"], [799, \"104.7%\"], [800, \"105.3%\"], [801, \"106.0%\"], [802, \"106.7%\"], [803, \"107.3%\"], [804, \"108.0%\"], [805, \"108.7%\"], [806, \"109.3%\"], [807, \"110.0%\"], [808, \"110.7%\"], [809, \"111.3%\"], [810, \"112.0%\"], [811, \"112.7%\"], [812, \"113.3%\"], [813, \"114.0%\"], [814, \"114.7%\"], [815, \"115.3%\"], [816, \"116.0%\"], [817, \"116.7%\"], [818, \"117.3%\"], [819, \"118.0%\"], [820, \"118.7%\"], [821, \"119.3%\"], [822, \"120.0%\"], [823, \"120.7%\"], [824, \"121.3%\"], [825, \"122.0%\"], [826, \"122.7%\"], [827, \"123.3%\"], [828, \"124.0%\"], [829, \"124.7%\"], [830, \"125.3%\"], [831, \"126.0%\"], [832, \"126.7%\"], [833, \"127.3%\"], [834, \"128.0%\"], [835, \"128.7%\"], [836, \"129.3%\"], [837, \"130.0%\"], [838, \"130.7%\"], [839, \"131.3%\"], [840, \"132.0%\"]] } },\n{ \"year\": \"1955\", \"data\": { \"yearsMonths\": [[\"66 + 2 months\", \"100.0%\"], [\"66 + 3 months\", \"100.7%\"], [\"66 + 4 months\", \"101.3%\"], [\"66 + 5 months\", \"102.0%\"], [\"66 + 6 months\", \"102.7%\"], [\"66 + 7 months\", \"103.3%\"], [\"66 + 8 months\", \"104.0%\"], [\"66 + 9 months\", \"104.7%\"], [\"66 + 10 months\", \"105.3%\"], [\"66 + 11 months\", \"106.0%\"], [\"67\", \"106.7%\"], [\"67 + 1 month\", \"107.3%\"], [\"67 + 2 months\", \"108.0%\"], [\"67 + 3 months\", \"108.7%\"], [\"67 + 4 months\", \"109.3%\"], [\"67 + 5 months\", \"110.0%\"], [\"67 + 6 months\", \"110.7%\"], [\"67 + 7 months\", \"111.3%\"], [\"67 + 8 months\", \"112.0%\"], [\"67 + 9 months\", \"112.7%\"], [\"67 + 10 months\", \"113.3%\"], [\"67 + 11 months\", \"114.0%\"], [\"68\", \"114.7%\"], [\"68 + 1 month\", \"115.3%\"], [\"68 + 2 months\", \"116.0%\"], [\"68 + 3 months\", \"116.7%\"], [\"68 + 4 months\", \"117.3%\"], [\"68 + 5 months\", \"118.0%\"], [\"68 + 6 months\", \"118.7%\"], [\"68 + 7 months\", \"119.3%\"], [\"68 + 8 months\", \"120.0%\"], [\"68 + 9 months\", \"120.7%\"], [\"68 + 10 months\", \"121.3%\"], [\"68 + 11 months\", \"122.0%\"], [\"69\", \"122.7%\"], [\"69 + 1 month\", \"123.3%\"], [\"69 + 2 months\", \"124.0%\"], [\"69 + 3 months\", \"124.7%\"], [\"69 + 4 months\", \"125.3%\"], [\"69 + 5 months\", \"126.0%\"], [\"69 + 6 months\", \"126.7%\"], [\"69 + 7 months\", \"127.3%\"], [\"69 + 8 months\", \"128.0%\"], [\"69 + 9 months\", \"128.7%\"], [\"69 + 10 months\", \"129.3%\"], [\"69 + 11 months\", \"130.0%\"], [\"70 or later\", \"130.7%\"]], \"months\": [[794, \"100.0%\"], [795, \"100.7%\"], [796, \"101.3%\"], [797, \"102.0%\"], [798, \"102.7%\"], [799, \"103.3%\"], [800, \"104.0%\"], [801, \"104.7%\"], [802, \"105.3%\"], [803, \"106.0%\"], [804, \"106.7%\"], [805, \"107.3%\"], [806, \"108.0%\"], [807, \"108.7%\"], [808, \"109.3%\"], [809, \"110.0%\"], [810, \"110.7%\"], [811, \"111.3%\"], [812, \"112.0%\"], [813, \"112.7%\"], [814, \"113.3%\"], [815, \"114.0%\"], [816, \"114.7%\"], [817, \"115.3%\"], [818, \"116.0%\"], [819, \"116.7%\"], [820, \"117.3%\"], [821, \"118.0%\"], [822, \"118.7%\"], [823, \"119.3%\"], [824, \"120.0%\"], [825, \"120.7%\"], [826, \"121.3%\"], [827, \"122.0%\"], [828, \"122.7%\"], [829, \"123.3%\"], [830, \"124.0%\"], [831, \"124.7%\"], [832, \"125.3%\"], [833, \"126.0%\"], [834, \"126.7%\"], [835, \"127.3%\"], [836, \"128.0%\"], [837, \"128.7%\"], [838, \"129.3%\"], [839, \"130.0%\"], [840, \"130.7%\"]] } },\n{ \"year\": \"1956\", \"data\": { \"yearsMonths\": [[\"66 + 4 months\", \" 100%\"], [\"66 + 5 months\", \" 100.7%\"], [\"66 + 6 months\", \" 101.3%\"], [\"66 + 7 months\", \" 102.0%\"], [\"66 + 8 months\", \" 102.7%\"], [\"66 + 9 months\", \" 103.3%\"], [\"66 + 10 months\", \" 104.0%\"], [\" 66 + 11 months\", \" 104.7%\"], [\"67\", \" 105.3%\"], [\"67 + 1 month\", \" 106.0%\"], [\"67 + 2 months\", \" 106.7%\"], [\"67 + 3 months\", \" 107.3%\"], [\"67 + 4 months\", \" 108.0%\"], [\"67 + 5 months\", \" 108.7%\"], [\"67 + 6 months\", \" 109.3%\"], [\"67 + 7 months\", \" 110.0%\"], [\"67 + 8 months\", \" 110.7%\"], [\"67 + 9 months\", \" 111.3%\"], [\"67 + 10 months\", \" 112.0%\"], [\"67 + 11 months\", \" 112.7%\"], [\"68\", \" 113.3%\"], [\"68 + 1 month\", \" 114.0%\"], [\"68 + 2 months\", \" 114.7%\"], [\"68 + 3 months\", \" 115.3%\"], [\"68 + 4 months\", \" 116.0%\"], [\"68 + 5 months\", \" 116.7%\"], [\"68 + 6 months\", \" 117.3%\"], [\"68 + 7 months\", \" 118.0%\"], [\"68 + 8 months\", \" 118.7%\"], [\"68 + 9 months\", \" 119.3%\"], [\"68 + 10 months\", \" 120.0%\"], [\"68 + 11 months\", \" 120.7%\"], [\"69 \", \" 121.3%\"], [\"69 + 1 month\", \" 122.0%\"], [\"69 + 2 months\", \" 122.7%\"], [\"69 + 3 months\", \" 123.3%\"], [\"69 + 4 months\", \" 124.0%\"], [\"69 + 5 months\", \" 124.7%\"], [\"69 + 6 months\", \" 125.3%\"], [\"69 + 7 months\", \" 126.0%\"], [\"69 + 8 months\", \" 126.7%\"], [\"69 + 9 months\", \" 127.3%\"], [\"69 + 10 months\", \" 128.0%\"], [\"69 + 11 months\", \" 128.7%\"], [\"70 or later\", \" 129.3%\"]], \"months\": [[796, \" 100%\"], [797, \" 100.7%\"], [798, \" 101.3%\"], [799, \" 102.0%\"], [800, \" 102.7%\"], [801, \" 103.3%\"], [802, \" 104.0%\"], [803, \" 104.7%\"], [804, \" 105.3%\"], [805, \" 106.0%\"], [806, \" 106.7%\"], [807, \" 107.3%\"], [808, \" 108.0%\"], [809, \" 108.7%\"], [810, \" 109.3%\"], [811, \" 110.0%\"], [812, \" 110.7%\"], [813, \" 111.3%\"], [814, \" 112.0%\"], [815, \" 112.7%\"], [816, \" 113.3%\"], [817, \" 114.0%\"], [818, \" 114.7%\"], [819, \" 115.3%\"], [820, \" 116.0%\"], [821, \" 116.7%\"], [822, \" 117.3%\"], [823, \" 118.0%\"], [824, \" 118.7%\"], [825, \" 119.3%\"], [826, \" 120.0%\"], [827, \" 120.7%\"], [828, \" 121.3%\"], [829, \" 122.0%\"], [830, \" 122.7%\"], [831, \" 123.3%\"], [832, \" 124.0%\"], [833, \" 124.7%\"], [834, \" 125.3%\"], [835, \" 126.0%\"], [836, \" 126.7%\"], [837, \" 127.3%\"], [838, \" 128.0%\"], [839, \" 128.7%\"], [840, \" 129.3%\"]] } },\n{ \"year\": \"1958\", \"data\": { \"yearsMonths\": [[\"66 + 8 months\", \"100%\"], [\"66 + 9 months\", \"100.7%\"], [\"66 + 10 months\", \"101.3%\"], [\"66 + 11 months\", \"102.0%\"], [\"67\", \"102.7%\"], [\"67 + 1 month\", \"103.3%\"], [\"67 + 2 months\", \"104.0%\"], [\"67 + 3 months\", \"104.7%\"], [\"67 + 4 months\", \"105.3%\"], [\"67 + 5 months\", \"106.0%\"], [\"67 + 6 months\", \"106.7%\"], [\"67 + 7 months\", \"107.3%\"], [\"67 + 8 months\", \"108.0%\"], [\"67 + 9 months\", \"108.7%\"], [\"67 + 10 months\", \"109.3%\"], [\"67 + 11 months\", \"110.0%\"], [\"68\", \"110.7%\"], [\"68 + 1 month\", \"111.3%\"], [\"68 + 2 months\", \"112.0%\"], [\"68 + 3 months\", \"112.7%\"], [\"68 + 4 months\", \"113.3%\"], [\"68 + 5 months\", \"114.0%\"], [\"68 + 6 months\", \"114.7%\"], [\"68 + 7 months\", \"115.3%\"], [\"68 + 8 months\", \"116.0%\"], [\"68 + 9 months\", \"116.7%\"], [\"68 + 10 months\", \"117.3%\"], [\"68 + 11 months\", \"118.0%\"], [\"69\", \"118.7%\"], [\"69 + 1 month\", \"119.3%\"], [\"69 + 2 months\", \"120.0%\"], [\"69 + 3 months\", \"120.7%\"], [\"69 + 4 months\", \"121.3%\"], [\"69 + 5 months\", \"122.0%\"], [\"69 + 6 months\", \"122.7%\"], [\"69 + 7 months\", \"123.3%\"], [\"69 + 8 months\", \"124.0%\"], [\"69 + 9 months\", \"124.7%\"], [\"69 + 10 months\", \"125.3%\"], [\"69 + 11 months\", \"126.0%\"], [\"70 or later\", \"126.7%\"]], \"months\": [[800, \"100%\"], [801, \"100.7%\"], [802, \"101.3%\"], [803, \"102.0%\"], [804, \"102.7%\"], [805, \"103.3%\"], [806, \"104.0%\"], [807, \"104.7%\"], [808, \"105.3%\"], [809, \"106.0%\"], [810, \"106.7%\"], [811, \"107.3%\"], [812, \"108.0%\"], [813, \"108.7%\"], [814, \"109.3%\"], [815, \"110.0%\"], [816, \"110.7%\"], [817, \"111.3%\"], [818, \"112.0%\"], [819, \"112.7%\"], [820, \"113.3%\"], [821, \"114.0%\"], [822, \"114.7%\"], [823, \"115.3%\"], [824, \"116.0%\"], [825, \"116.7%\"], [826, \"117.3%\"], [827, \"118.0%\"], [828, \"118.7%\"], [829, \"119.3%\"], [830, \"120.0%\"], [831, \"120.7%\"], [832, \"121.3%\"], [833, \"122.0%\"], [834, \"122.7%\"], [835, \"123.3%\"], [836, \"124.0%\"], [837, \"124.7%\"], [838, \"125.3%\"], [839, \"126.0%\"], [840, \"126.7%\"]] } },\n{ \"year\": \"1959\", \"data\": { \"yearsMonths\": [[\"66 + 10 months\", \"100%\"], [\"66 + 11 months\", \"100.7%\"], [\"67\", \"101.3%\"], [\"67 + 1 month\", \"102.0%\"], [\"67 + 2 months\", \"102.7%\"], [\"67 + 3 months\", \"103.3%\"], [\"67 + 4 months\", \"104.0%\"], [\"67 + 5 months\", \"104.7%\"], [\"67 + 6 months\", \"105.3%\"], [\"67 + 7 months\", \"106.%\"], [\"67 + 8 months\", \"106.7%\"], [\"67 + 9 months\", \"107.3%\"], [\"67 + 10 months\", \"108.0%\"], [\"67 + 11 months\", \"108.7%\"], [\"68\", \"109.3%\"], [\"68 + 1 month\", \"110.0%\"], [\"68 + 2 months\", \"110.7%\"], [\"68 + 3 months\", \"111.3%\"], [\"68 + 4 months\", \"112.0%\"], [\"68 + 5 months\", \"112.7%\"], [\"68 + 6 months\", \"113.3%\"], [\"68 + 7 months\", \"114.0%\"], [\"68 + 8 months\", \"114.7%\"], [\"68 + 9 months\", \"115.3%\"], [\"68 + 10 months\", \"116.0%\"], [\"68 + 11 months\", \"116.7%\"], [\"69\", \"117.3%\"], [\"69 + 1 month\", \"118.0%\"], [\"69 + 2 months\", \"118.7%\"], [\"69 + 3 months\", \"119.3%\"], [\"69 + 4 months\", \"120.0%\"], [\"69 + 5 months\", \"120.7%\"], [\"69 + 6 months\", \"121.3%\"], [\"69 + 7 months\", \"122.0%\"], [\"69 + 8 months\", \"122.7%\"], [\"69 + 9 months\", \"123.3%\"], [\"69 + 10 months\", \"124.0%\"], [\"69 + 11 months\", \"124.7%\"], [\"70 or later\", \"125.3%\"]], \"months\": [[802, \"100%\"], [803, \"100.7%\"], [804, \"101.3%\"], [805, \"102.0%\"], [806, \"102.7%\"], [807, \"103.3%\"], [808, \"104.0%\"], [809, \"104.7%\"], [810, \"105.3%\"], [811, \"106.%\"], [812, \"106.7%\"], [813, \"107.3%\"], [814, \"108.0%\"], [815, \"108.7%\"], [816, \"109.3%\"], [817, \"110.0%\"], [818, \"110.7%\"], [819, \"111.3%\"], [820, \"112.0%\"], [821, \"112.7%\"], [822, \"113.3%\"], [823, \"114.0%\"], [824, \"114.7%\"], [825, \"115.3%\"], [826, \"116.0%\"], [827, \"116.7%\"], [828, \"117.3%\"], [829, \"118.0%\"], [830, \"118.7%\"], [831, \"119.3%\"], [832, \"120.0%\"], [833, \"120.7%\"], [834, \"121.3%\"], [835, \"122.0%\"], [836, \"122.7%\"], [837, \"123.3%\"], [838, \"124.0%\"], [839, \"124.7%\"], [840, \"125.3%\"]] } },\n{ \"year\": \"1957\", \"data\": { \"yearsMonths\": [[\"66 + 6 months\", \"100%\"], [\"66 + 7 months\", \"100.7%\"], [\"66 + 8 months\", \"101.3%\"], [\"66 + 9 months\", \"102.0%\"], [\"66 + 10 months\", \"102.7%\"], [\"66 + 11 months\", \"103.3%\"], [\"67\", \"104.0%\"], [\"67 + 1 month\", \"104.7%\"], [\"67 + 2 months\", \"105.3%\"], [\"67 + 3 months\", \"106.0%\"], [\"67 + 4 months\", \"106.7%\"], [\"67 + 5 months\", \"107.3%\"], [\"67 + 6 months\", \"108.0%\"], [\"67 + 7 months\", \"108.7%\"], [\"67 + 8 months\", \"109.3%\"], [\"67 + 9 months\", \"110.0%\"], [\"67 + 10 months\", \"110.7%\"], [\"67 + 11 months\", \"111.3%\"], [\"68\", \"112.0%\"], [\"68 + 1 month\", \"112.7%\"], [\"68 + 2 months\", \"113.3%\"], [\"68 + 3 months\", \"114.0%\"], [\"68 + 4 months\", \"114.7%\"], [\"68 + 5 months\", \"115.3%\"], [\"68 + 6 months\", \"116.0%\"], [\"68 + 7 months\", \"116.7%\"], [\"68 + 8 months\", \"117.3%\"], [\"68 + 9 months\", \"118.0%\"], [\"68 + 10 months\", \"118.7%\"], [\"68 + 11 months\", \"119.3%\"], [\"69\", \"120.0%\"], [\"69 + 1 month\", \"120.7%\"], [\"69 + 2 months\", \"121.3%\"], [\"69 + 3 months\", \"122.0%\"], [\"69 + 4 months\", \"122.7%\"], [\"69 + 5 months\", \"123.3%\"], [\"69 + 6 months\", \"124.0%\"], [\"69 + 7 months\", \"124.7%\"], [\"69 + 8 months\", \"125.3%\"], [\"69 + 9 months\", \"126.0%\"], [\"69 + 10 months\", \"126.7%\"], [\"69 + 11 months\", \"127.3%\"], [\"70 or later\", \"128.0%\"]], \"months\": [[798, \"100%\"], [799, \"100.7%\"], [800, \"101.3%\"], [801, \"102.0%\"], [802, \"102.7%\"], [803, \"103.3%\"], [804, \"104.0%\"], [805, \"104.7%\"], [806, \"105.3%\"], [807, \"106.0%\"], [808, \"106.7%\"], [809, \"107.3%\"], [810, \"108.0%\"], [811, \"108.7%\"], [812, \"109.3%\"], [813, \"110.0%\"], [814, \"110.7%\"], [815, \"111.3%\"], [816, \"112.0%\"], [817, \"112.7%\"], [818, \"113.3%\"], [819, \"114.0%\"], [820, \"114.7%\"], [821, \"115.3%\"], [822, \"116.0%\"], [823, \"116.7%\"], [824, \"117.3%\"], [825, \"118.0%\"], [826, \"118.7%\"], [827, \"119.3%\"], [828, \"120.0%\"], [829, \"120.7%\"], [830, \"121.3%\"], [831, \"122.0%\"], [832, \"122.7%\"], [833, \"123.3%\"], [834, \"124.0%\"], [835, \"124.7%\"], [836, \"125.3%\"], [837, \"126.0%\"], [838, \"126.7%\"], [839, \"127.3%\"], [840, \"128.0%\"]] } },\n{ \"year\": \"1960\", \"data\": { \"yearsMonths\": [[\"67\", \"100%\"], [\"67 + 1 month\", \"100.7%\"], [\"67 + 2 months\", \"101.3%\"], [\"67 + 3 months\", \"102.0%\"], [\"67 + 4 months\", \"102.7%\"], [\"67 + 5 months\", \"103.3%\"], [\"67 + 6 months\", \"104.0%\"], [\"67 + 7 months\", \"104.7%\"], [\"67 + 8 months\", \"105.3%\"], [\"67 + 9 months\", \"106.0%\"], [\"67 + 10 months\", \"106.7%\"], [\"67 + 11 months\", \"107.3%\"], [\"68\", \"108.0%\"], [\"68 + 1 month\", \"108.7%\"], [\"68 + 2 months\", \"109.3%\"], [\"68 + 3 months\", \"110.0%\"], [\"68 + 4 months\", \"110.7%\"], [\"68 + 5 months\", \"111.3%\"], [\"68 + 6 months\", \"112.0%\"], [\"68 + 7 months\", \"112.7%\"], [\"68 + 8 months\", \"113.3%\"], [\"68 + 9 months\", \"114.0%\"], [\"68 + 10 months\", \"114.7%\"], [\"68 + 11 months\", \"115.3%\"], [\"69\", \"116.0%\"], [\"69 + 1 month\", \"116.7%\"], [\"69 + 2 months\", \"117.3%\"], [\"69 + 3 months\", \"118.0%\"], [\"69 + 4 months\", \"118.7%\"], [\"69 + 5 months\", \"119.3%\"], [\"69 + 6 months\", \"120.0%\"], [\"69 + 7 months\", \"120.7%\"], [\"69 + 8 months\", \"121.3%\"], [\"69 + 9 months\", \"122.0%\"], [\"69 + 10 months\", \"122.7%\"], [\"69 + 11 months\", \"123.3%\"], [\"70 or later\", \"124.0%\"]], \"months\": [[804, \"100%\"], [805, \"100.7%\"], [806, \"101.3%\"], [807, \"102.0%\"], [808, \"102.7%\"], [809, \"103.3%\"], [810, \"104.0%\"], [811, \"104.7%\"], [812, \"105.3%\"], [813, \"106.0%\"], [814, \"106.7%\"], [815, \"107.3%\"], [816, \"108.0%\"], [817, \"108.7%\"], [818, \"109.3%\"], [819, \"110.0%\"], [820, \"110.7%\"], [821, \"111.3%\"], [822, \"112.0%\"], [823, \"112.7%\"], [824, \"113.3%\"], [825, \"114.0%\"], [826, \"114.7%\"], [827, \"115.3%\"], [828, \"116.0%\"], [829, \"116.7%\"], [830, \"117.3%\"], [831, \"118.0%\"], [832, \"118.7%\"], [833, \"119.3%\"], [834, \"120.0%\"], [835, \"120.7%\"], [836, \"121.3%\"], [837, \"122.0%\"], [838, \"122.7%\"], [839, \"123.3%\"], [840, \"124.0%\"]] } }]\n\nexport const benefitIndexes = { \"1952\": [\"$3,600\", \"14.46\"], \"1953\": [\"$3,600\", \"13.69\"], \"1954\": [\"$3,600\", \"13.62\"], \"1955\": [\"$4,200\", \"13.02\"], \"1956\": [\"$4,200\", \"12.17\"], \"1957\": [\"$4,200\", \"11.80\"], \"1958\": [\"$4,200\", \"11.70\"], \"1959\": [\"$4,800\", \"11.15\"], \"1960\": [\"$4,800\", \"10.73\"], \"1961\": [\"$4,800\", \"10.52\"], \"1962\": [\"$4,800\", \"10.02\"], \"1963\": [\"$4,800\", \"9.78\"], \"1964\": [\"$4,800\", \"9.39\"], \"1965\": [\"$4,800\", \"9.23\"], \"1966\": [\"$6,600\", \"8.70\"], \"1967\": [\"$6,600\", \"8.24\"], \"1968\": [\"$7,800\", \"7.71\"], \"1969\": [\"$7,800\", \"7.29\"], \"1970\": [\"$7,800\", \"6.95\"], \"1971\": [\"$7,800\", \"6.62\"], \"1972\": [\"$9,000\", \"6.02\"], \"1973\": [\"$10,800\", \"5.67\"], \"1974\": [\"$13,200\", \"5.35\"], \"1975\": [\"$14,100\", \"4.98\"], \"1976\": [\"$15,300\", \"4.66\"], \"1977\": [\"$16,500\", \"4.39\"], \"1978\": [\"$17,700\", \"4.07\"], \"1979\": [\"$22,900\", \"3.74\"], \"1980\": [\"$25,900\", \"3.43\"], \"1981\": [\"$29,700\", \"3.12\"], \"1982\": [\"$32,400\", \"2.96\"], \"1983\": [\"$35,700\", \"2.82\"], \"1984\": [\"$37,800\", \"2.66\"], \"1985\": [\"$39,600\", \"2.55\"], \"1986\": [\"$42,000\", \"2.48\"], \"1987\": [\"$43,800\", \"2.33\"], \"1988\": [\"$45,000\", \"2.22\"], \"1989\": [\"$48,000\", \"2.14\"], \"1990\": [\"$51,300\", \"2.04\"], \"1991\": [\"$53,400\", \"1.97\"], \"1992\": [\"$55,500\", \"1.87\"], \"1993\": [\"$57,600\", \"1.86\"], \"1994\": [\"$60,600\", \"1.81\"], \"1995\": [\"$61,200\", \"1.74\"], \"1996\": [\"$62,700\", \"1.66\"], \"1997\": [\"$65,400\", \"1.57\"], \"1998\": [\"$68,400\", \"1.49\"], \"1999\": [\"$72,600\", \"1.41\"], \"2000\": [\"$76,200\", \"1.34\"], \"2001\": [\"$80,400\", \"1.31\"], \"2002\": [\"$84,900\", \"1.29\"], \"2003\": [\"$87,000\", \"1.26\"], \"2004\": [\"$87,900\", \"1.21\"], \"2005\": [\"$90,000\", \"1.16\"], \"2006\": [\"$94,200\", \"1.11\"], \"2007\": [\"$97,500\", \"1.06\"], \"2008\": [\"$102,000\", \"1.04\"], \"2009\": [\"$106,800\", \"1.06\"], \"2010\": [\"$106,800\", \"1.03\"], \"2011\": [\"$106,800\", \"1.00\"], \"2012\": [\"$110,100\", \"1.00\"] }","import { allBenefitsByYears, allDelayedBenefitsByYears } from '../data/allBenefitsByYears'\n// React doesn't like Coffeescript\n// const urllib = require('urllib')\n\n// const getBenefitsHtml = (year, delayed = false) => {\n//   return new Promise((resolve, reject) => {\n//     urllib.request(`https://www.ssa.gov/benefits/retirement/planner/${delayed ? year + \"-delay\" : year}.html`)\n//       .then(result => (resolve(result.data.toString())))\n//   })\n// }\n\nconst getBenefitsTables = data => {\n  const tableStart = data.search(/\\<tbody\\>/);\n  const tableEnd = data.search(/\\<td colspan/);\n  const tableRows = data.slice(tableStart, tableEnd).split(\"<tr>\").slice(1, -1).map(row => row.match(/(?<=\\<td\\>).+(?=\\<\\/td>)/g));\n  const tableRowsByMonths = tableRows.map((row, i) => (\n    row.length > 2 ?\n      [row[0].search(/\\+/) !== -1 ? (parseInt(row[0].split(\" + \")[0]) * 12) + parseInt(row[0].split(\" + \")[1])\n        : parseInt(row[0]) * 12, row[1], row[2]]\n      :\n      [row[0].search(/\\+/) !== -1 ? (parseInt(row[0].split(\" + \")[0]) * 12) + parseInt(row[0].split(\" + \")[1])\n        : parseInt(row[0]) * 12, row[1]])\n  )\n  return { yearsMonths: tableRows, months: tableRowsByMonths }\n}\n\n// const getBenefitsTablesByYears = (delayed = false) => {\n//   const applicableYears = [\n//     '1943',\n//     '1955',\n//     '1956',\n//     '1957',\n//     '1958',\n//     '1959',\n//     '1960'\n//   ]\n//   const tablesByYears = {}\n\n//   for (let year of applicableYears) {\n//     setTimeout(() => {\n//       getBenefitsHtml(year, delayed)\n//         .then(res => console.log(JSON.stringify({ year: year, data: getBenefitsTables(res) })))\n//     }, 2000)\n//   }\n// }\n\nconst getMonthlyBenefit = () => {\n\n}\n\nexport const getBenefitsByMaxAge = (benefitsTables, startAge, maxAge, monthlyWage = 1000) => {\n  let ageYearsMonths\n  let reductionPercent\n  let spouseReductionPercent\n  let monthlyBenefit = 1000\n  // let monthlyBenefit = monthlyWage + 794 - (monthlyWage - 20 - 65)/2\n  let adjustedMonthlyBenefit\n  let adjustedSpouseMonthlyBenefit\n  let firstYearOffset\n  let firstYearBenefits\n  let firstYearSpouseBenefits\n  let maxBenefitsByYears\n  let maxSpouseBenefitsByYears\n\n  for (let i = 0; i < benefitsTables.months.length; i++) {\n    if (benefitsTables.months[i][0] === startAge) {\n      reductionPercent = parseFloat(benefitsTables.months[i][1]) / 100\n      spouseReductionPercent = parseFloat(benefitsTables.months[i][2]) / 100\n      ageYearsMonths = benefitsTables.yearsMonths[i][0]\n      firstYearOffset = ageYearsMonths.search(/\\+/) !== -1 ? 12 - parseInt(ageYearsMonths.split(\" + \")[1]) : 12\n    }\n  }\n\n  firstYearBenefits = firstYearOffset * monthlyBenefit * reductionPercent\n  firstYearSpouseBenefits = firstYearOffset * monthlyBenefit * spouseReductionPercent\n  adjustedMonthlyBenefit = reductionPercent * monthlyBenefit\n  adjustedSpouseMonthlyBenefit = spouseReductionPercent * monthlyBenefit\n  maxBenefitsByYears = Array.apply(null, Array(maxAge - Math.floor(startAge / 12)))\n  maxSpouseBenefitsByYears = Array.apply(null, Array(maxAge - Math.floor(startAge / 12)))\n\n  for (let i = 0; i < maxBenefitsByYears.length; i++) {\n    maxBenefitsByYears[i] = i * 12 * adjustedMonthlyBenefit + firstYearBenefits\n    maxSpouseBenefitsByYears[i] = i * 12 * adjustedSpouseMonthlyBenefit + firstYearSpouseBenefits\n  }\n\n  return { ageYearsMonths, wageEarner: maxBenefitsByYears, spouse: maxSpouseBenefitsByYears }\n}\n\nconst getBenefitsByYear = (allBenefitsByYears, birthYear) => {\n  let year = birthYear >= 1943 && birthYear <= 1954 ? 1943\n    : birthYear >= 1960 ? 1960\n      : birthYear\n\n  for (let i = 0; i < allBenefitsByYears.length; i++) {\n    if (allBenefitsByYears[i].year === year.toString()) return allBenefitsByYears[i]\n  }\n}\n\nconst getBenefitReductions = benefitsTables => {\n  const reductions = {}\n  reductions.percentages = Array.apply(null, Array(benefitsTables.data.months.length)).map((_, i) =>\n    parseFloat(benefitsTables.data.months[i][1]))\n  reductions.applicableMonths = Array.apply(null, Array(benefitsTables.data.months.length)).map((_, i) =>\n    benefitsTables.data.months[i][0])\n  reductions.applicableYearsMonths = Array.apply(null, Array(benefitsTables.data.months.length)).map((_, i) =>\n    benefitsTables.data.yearsMonths[i][0])\n  return reductions\n}\n\nexport const getMaxBenefits = (birthYear, maxAge, monthlyWage = 1000, delayed = false) => {\n  const benefitsReductions = getBenefitReductions(getBenefitsByYear(delayed ? allDelayedBenefitsByYears : allBenefitsByYears, birthYear))\n  const benefitsRange = delayed ? maxAge * 12  - 792 : maxAge * 12 - 744 // Expected lifespan over n months beginning at age 62\n  const earningsByStartAge = []\n  let reductionPercent\n  let monthlyBenefit = 1000\n  // let monthlyBenefit = monthlyWage + 794 - (monthlyWage - 20 - 65)/2\n  let adjustedMonthlyBenefit\n  let totalEarnings\n\n  for (let i = 0; i < benefitsReductions.percentages.length; i++) {\n    reductionPercent = benefitsReductions.percentages[i] / 100\n    adjustedMonthlyBenefit = reductionPercent * monthlyBenefit\n    totalEarnings = adjustedMonthlyBenefit * (benefitsRange - i)\n    earningsByStartAge.push({\n      age: benefitsReductions.applicableYearsMonths[i],\n      earnings: totalEarnings\n    })\n  }\n\n  return earningsByStartAge\n}","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst SliderContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: row;\n  width: ${props => props.width ? props.width + 60 + \"px\" : \"200px\"};\n  color: rgb(228, 228, 228);\n`\n\nconst RangeSlider = ({setParentValue, range, visibleRange}) => {\n  const [value, setValue] = useState(0)\n  const min = 0\n  const max = range ? range : 100\n  const width = 500\n\n  useEffect(() => {\n    setParentValue(value)\n  }, [value])\n\n  return (\n    <SliderContainer\n      width={width}\n    >\n      {visibleRange.min}\n      <input\n        style={{width: width + \"px\"}}\n        type=\"range\"\n        min={min}\n        max={max}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      {visibleRange.max}\n    </SliderContainer>\n  )\n}\n\nexport default RangeSlider","import React, { useState, useEffect } from 'react'\nimport { getBenefitsByMaxAge, getMaxBenefits } from '../helpers/benefitsGetter'\nimport { allBenefitsByYears, allDelayedBenefitsByYears } from '../data/allBenefitsByYears'\nimport RangeSlider from './RangeSlider/RangeSlider'\nimport * as d3 from 'd3'\nimport '../App.css'\n\nconst marginLeft = 70\n\nexport const LineGraph = (props) => {\n  const [age, setAge] = useState(0)\n  const [monthlyBenefit, setMonthlyBenefit] = useState(props.monthlyBenefit ?? 1000)\n  const marginTop = 40\n  const width = 800\n  const height = 250\n  const xFullAge = (width / 2) + marginLeft\n  const xBelowFullAge = xFullAge - 100\n  const xStartAge = xBelowFullAge - 100\n  const xAboveFullAge = xFullAge + 100\n  const xMaxAge = xAboveFullAge + 100\n  const monthlyData = allBenefitsByYears.find(row => row.year === props.birthYear).data\n  const monthlyDataDelayed = allDelayedBenefitsByYears.find(row => row.year === props.birthYear).data\n  const startAgeYearsMonths = monthlyData.yearsMonths[0][0]\n  const startAgeMonths = monthlyData.months[0][0]\n  const fullAgeYearsMonths = monthlyData.yearsMonths[monthlyData.yearsMonths.length - 1][0]\n  const fullAgeMonths = monthlyData.months[monthlyData.months.length - 1][0]\n  const applicableAges = Array.apply(null, Array(monthlyData.months.length)).map((_, i) =>\n  ({\n    yearsMonths: monthlyData.yearsMonths[i][0],\n    months: monthlyData.months[i][0],\n    benefitPercent: parseFloat(monthlyData.months[i][1]),\n    spouseReductionPercent: parseFloat(monthlyData.months[i][2])\n  }))\n  const applicableDelayedAges = Array.apply(null, Array(monthlyDataDelayed.months.length)).map((_, i) =>\n  ({\n    yearsMonths: monthlyDataDelayed.yearsMonths[i][0],\n    months: monthlyDataDelayed.months[i][0],\n    benefitPercent: parseFloat(monthlyDataDelayed.months[i][1]),\n  }))\n  const allApplicableAges = applicableAges.concat(applicableDelayedAges)\n  const monthlyBenefitAmounts = Array.apply(null, Array(allApplicableAges.length)).map((_, i) => (\n    {\n      yearsMonths: allApplicableAges[i].yearsMonths,\n      months: allApplicableAges[i].months,\n      // amount: (monthlyBenefit + 794 - (monthlyBenefit - 20 - 65)/2) * allApplicableAges[i].benefitPercent / 100\n      amount: monthlyBenefit * allApplicableAges[i].benefitPercent / 100\n    }\n  ))\n  const yScale = d3.scaleLinear()\n    .domain([500, monthlyBenefitAmounts[monthlyBenefitAmounts.length - 1].amount + 100])\n    .range([height, 0])\n  const xScaleMain = d3.scalePoint()\n    // .domain([0, 62, 67, 70])\n    .range([0, width])\n  const xScaleSelectable = d3.scaleBand()\n    .domain(monthlyBenefitAmounts.map(d => d.yearsMonths))\n    .range([0, width])\n\n  function getXPos(d) {\n    return (\n      d.months < fullAgeMonths ?\n        d.yearsMonths === startAgeYearsMonths ? xStartAge : xBelowFullAge :\n        d.months === fullAgeMonths ? xFullAge :\n          d.months === 840 ? xMaxAge : xAboveFullAge\n    )\n  }\n\n  function getPointIds(d) {\n    return (\n      d.months < fullAgeMonths ?\n        d.months === startAgeMonths ? \"startAge\" : \"belowFullAge\" :\n        d.months === fullAgeMonths ? \"fullAge\" :\n          d.months === 840 ? \"maxAge\" : \"aboveFullAge\"\n    )\n  }\n\n  function getSelectedAgeTick(d) {\n    d3.select('.selectedAge').remove()\n    d3.select('.chart')\n      .append('text')\n      .attr('class', 'selectedAge')\n      .attr('transform', `translate(${getXPos(d)}, ${height + marginTop})`)\n      .attr('font-size', '11.5')\n      .attr('dy', '16')\n      .attr('text-anchor', 'middle')\n      .text(() => {\n        return d.yearsMonths === startAgeYearsMonths ? null :\n          d.months === fullAgeMonths ? null :\n            d.months === 840 ? null :\n              d.yearsMonths\n      })\n  }\n\n  function getLineCoordinates(selection, pointIdFrom, pointIdTo, defaultPoint) {\n    d3.select(selection)\n      .attr('x1', () => d3.select(pointIdFrom).attr('transform').match(/\\d+\\.?\\d+/g)[0])\n      .attr('y1', () => d3.select(pointIdFrom).attr('transform').match(/\\d+\\.?\\d+/g)[1])\n      .attr('x2', () => {\n        let x\n        d3.selectAll(pointIdTo)\n          .each(function () {\n            let point = d3.select(this)\n            if (point.style('opacity') === '1') {\n              x = point.attr('transform').match(/\\d+\\.?\\d+/g)[0]\n            }\n          })\n        return x ? x : d3.select(defaultPoint).attr('transform').match(/\\d+\\.?\\d+/g)[0]\n      })\n      .attr('y2', () => {\n        let y\n        d3.selectAll(pointIdTo)\n          .each(function () {\n            let point = d3.select(this)\n            if (point.style('opacity') === '1') {\n              y = point.attr('transform').match(/\\d+\\.?\\d+/g)[1]\n            }\n          })\n        return y ? y : d3.select(defaultPoint).attr('transform').match(/\\d+\\.?\\d+/g)[1]\n      })\n  }\n\n  useEffect(() => {\n    const svg = d3.select('svg')\n    const chart = svg.append('g')\n      .attr('class', 'chart')\n    chart.append('g')\n      .attr('class', 'grid')\n      .attr('transform', `translate(${marginLeft}, ${marginTop})`)\n      .call(d3.axisLeft()\n        .scale(yScale)\n        .tickSize(-width, 0, 0)\n        .tickSizeOuter(0)\n        .tickFormat('')\n        .tickValues([700, 900, 1100, 1300]))\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .tickFormat(d3.format(\"$,\"))\n      .tickValues([700, 900, 1100, 1300])\n      .tickSizeOuter(0)\n    const xAxis = d3.axisBottom()\n      .tickSizeOuter(0)\n      .scale(xScaleMain)\n\n    chart.append('g')\n      .attr('class', 'yScale')\n      .attr('transform', `translate(${marginLeft}, ${marginTop})`)\n      .style('font-size', \"13px\")\n      .call(yAxis)\n    chart.append('g')\n      .attr('class', 'xScale')\n      .attr('transform', `translate(${marginLeft}, ${height + marginTop})`)\n      .call(xAxis)\n\n    chart.append('line')\n      .attr(\"class\", \"grid\")\n      .attr('x1', xStartAge)\n      .attr('y1', marginTop)\n      .attr('x2', xStartAge)\n      .attr('y2', marginTop + height)\n    chart.append('line')\n      .attr(\"class\", \"grid\")\n      .attr('x1', xFullAge)\n      .attr('y1', marginTop)\n      .attr('x2', xFullAge)\n      .attr('y2', marginTop + height)\n    chart.append('line')\n      .attr(\"class\", \"grid\")\n      .attr('x1', xMaxAge)\n      .attr('y1', marginTop)\n      .attr('x2', xMaxAge)\n      .attr('y2', marginTop + height)\n\n    chart.append('line')\n      .attr('class', 'line1')\n    chart.append('line')\n      .attr('class', 'line2')\n    chart.append('line')\n      .attr('class', 'line3')\n    chart.append('line')\n      .attr('class', 'line4')\n\n    chart.append('text')\n      .attr('class', 'xAxisAge')\n      .attr('transform', `translate(${xStartAge}, ${height + marginTop})`)\n      .attr('font-size', '15')\n      .attr('dy', '16')\n      .attr('text-anchor', 'middle')\n      .text(startAgeYearsMonths)\n    chart.append('text')\n      .attr('class', 'xAxisAge')\n      .attr('transform', `translate(${xFullAge}, ${height + marginTop})`)\n      .attr('font-size', '15')\n      .attr('dy', '16')\n      .attr('text-anchor', 'middle')\n      .text(fullAgeYearsMonths)\n    chart.append('text')\n      .attr('class', 'xAxisAge')\n      .attr('transform', `translate(${xMaxAge}, ${height + marginTop})`)\n      .attr('font-size', '15')\n      .attr('dy', '16')\n      .attr('text-anchor', 'middle')\n      .text(\"70 or later\")\n    svg.append('text')\n      .attr('x', height / 2 + marginTop - 10)\n      .attr('y', marginLeft + height - 125)\n      .attr('transform-origin', `${marginLeft} ${marginTop + height}`)\n      .attr('transform', 'rotate(-90)')\n      .attr('text-anchor', 'middle')\n      .text('$/month')\n\n    chart.selectAll()\n      .data(monthlyBenefitAmounts)\n      .enter()\n      .append('g')\n      .attr('class', 'point')\n      .attr('transform', d => `translate(${getXPos(d)}, ${marginTop + yScale(d.amount)})`)\n    chart.selectAll('.point')\n      .append('circle')\n      .attr('id', 'pointBorder')\n      .attr('r', 11)\n    chart.selectAll('.point')\n      .append('circle')\n      .attr('id', 'outerPoint')\n      .attr('r', 10)\n    chart.selectAll('.point')\n      .append('circle')\n      .attr('id', 'innerPoint')\n      .attr('r', 6)\n    chart.selectAll('.point')\n      .attr('id', d => getPointIds(d))\n    chart.selectAll('.point')\n      .append('g')\n      .append('text')\n      .attr('class', 'pointText')\n      .text(d => d3.format(\"$,\")(d.amount))\n      .attr('font-size', '15')\n      .attr('text-anchor', 'middle')\n      .attr('dy', -17)\n  }, [])\n\n  useEffect(() => {\n    d3.selectAll('.point')\n      .style('opacity', d => {\n        return (\n          d.months === startAgeMonths ? 1 :\n            d.yearsMonths === fullAgeYearsMonths ? 1 :\n              d.months === 840 ? 1 :\n                d.months === allApplicableAges[age].months ? 1 : 0\n        )\n      })\n      .each(d => {\n        if (d.yearsMonths === allApplicableAges[age].yearsMonths) {\n          getSelectedAgeTick(d)\n        }\n      })\n    d3.selectAll('#innerPoint')\n      .style('fill', d => {\n        return d.yearsMonths === allApplicableAges[age].yearsMonths ? '#ff3232' : '#ff9090'\n      })\n    getLineCoordinates('.line1', '.point#startAge', '.point#belowFullAge', '.point#fullAge')\n    getLineCoordinates('.line2', '.point#fullAge', '.point#belowFullAge', '.point#fullAge')\n    getLineCoordinates('.line3', '.point#fullAge', '.point#aboveFullAge', '.point#maxAge')\n    getLineCoordinates('.line4', '.point#maxAge', '.point#aboveFullAge', '.point#maxAge')\n  }, [age])\n\n  return (\n    <>\n      <svg\n        width={width + marginLeft}\n        height={height + 80}\n        style={{paddingRight: \"30px\"}}\n      />\n      <RangeSlider\n        className=\"RangeSlider\"\n        setParentValue={setAge}\n        range={allApplicableAges.length - 1}\n        visibleRange={{ min: 62, max: 70 }}\n      />\n    </>\n  )\n}\n\nexport const MaxAgeGraph = (props) => {\n  const [birthYear, setBirthYear] = useState(props.birthYear)\n  const [maxAge, setMaxAge] = useState(0)\n  const [monthlyBenefit, setMonthlyWage] = useState(1000)\n  const marginTop = 50\n  const height = 500\n  const yHeight = height * .67\n  const width = 800\n  const maxAgeEarnings = React.useMemo(() => getMaxBenefits(birthYear, parseInt(maxAge) + 70), [birthYear, parseInt(maxAge + 70)])\n\n  useEffect(() => {\n    d3.selectAll(\".beforeFullAge > *\").remove()\n    const xScale = d3.scaleBand()\n      .domain(maxAgeEarnings.map(d => d.age))\n      .range([0, width])\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(maxAgeEarnings.map(d => d.earnings)), d3.max(maxAgeEarnings.map(d => d.earnings))])\n      .range([yHeight, 0])\n    const svg = d3.select('.beforeFullAge')\n    const chart = svg.append('g')\n      .attr('class', 'chart')\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .tickSizeOuter(0)\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .tickFormat(d3.format(\"$,\"))\n      .tickSizeOuter(0)\n\n    chart.append('text')\n      .attr('class', 'titleText')\n      .text(`Total amount received up to age ${parseInt(maxAge) + 70}`)\n      .attr('y', marginTop - 10)\n      .attr('x', marginLeft + width / 2)\n      .attr('text-anchor', 'middle')\n\n    chart.append('g')\n      .attr('class', 'xScale')\n      .attr('transform', `translate(${marginLeft}, ${marginTop + yHeight})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-65)\");\n    chart.append('g')\n      .attr('class', 'yScale')\n      .attr('transform', `translate(${marginLeft}, ${marginTop})`)\n      .call(yAxis)\n\n    chart.append('g')\n      .selectAll(\"dot\")\n      .data(maxAgeEarnings)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"scatterDot\")\n      .attr(\"cx\", d => xScale(d.age))\n      .attr(\"cy\", d => yScale(d.earnings))\n      .attr(\"transform\", `translate(${marginLeft + 6}, ${marginTop})`)\n    const line = d3.line()\n      .x(d => xScale(d.age))\n      .y(d => yScale(d.earnings))\n      .curve(d3.curveMonotoneX)\n    chart.append('path')\n      .datum(maxAgeEarnings)\n      .attr('class', 'scatterLine')\n      .attr('transform', `translate(${marginLeft + 6}, ${marginTop})`)\n      .attr('d', line)\n      .style('fill', 'none')\n  }, [maxAge])\n\n  return (\n    <>\n      <svg\n        className=\"beforeFullAge\"\n        height={height}\n        width={width + marginLeft + 30}\n      />\n      <RangeSlider\n        className=\"RangeSlider\"\n        setParentValue={setMaxAge}\n        range={50}\n        visibleRange={{ min: 70, max: 120 }}\n      />\n    </>\n  )\n}\n\nexport const DelayedMaxAgeGraph = (props) => {\n  const [birthYear, setBirthYear] = useState(props.birthYear)\n  const [maxAge, setMaxAge] = useState(0)\n  const [monthlyAmount, setMonthlyAmount] = useState(1000)\n  const marginTop = 50\n  const height = 500\n  const yHeight = height * .67\n  const width = 800\n  const delayedMaxAgeEarnings = React.useMemo(() => getMaxBenefits(birthYear, parseInt(maxAge) + 70, monthlyAmount, true), [birthYear, parseInt(maxAge) + 70])\n\n  useEffect(() => {\n    d3.selectAll(\".afterFullAge > *\").remove()\n    const xScale = d3.scaleBand()\n      .domain(delayedMaxAgeEarnings.map(d => d.age))\n      .range([0, width])\n    const yScale = d3.scaleLinear()\n      .domain([d3.min(delayedMaxAgeEarnings.map(d => d.earnings)), d3.max(delayedMaxAgeEarnings.map(d => d.earnings))])\n      .range([yHeight, 0])\n    const svg = d3.select('.afterFullAge')\n    const chart = svg.append('g')\n      .attr('class', 'chart')\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .tickSizeOuter(0)\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .tickFormat(d3.format(\"$,\"))\n      .tickSizeOuter(0)\n\n    svg.append('text')\n      .attr(\"class\", \"titleText\")\n      .text(`Total amount received up to age ${parseInt(maxAge) + 70}`)\n      .attr('y', marginTop - 10)\n      .attr('x', marginLeft + width / 2)\n      .attr('text-anchor', 'middle')\n\n    chart.append('g')\n      .attr('class', 'xScale')\n      .attr('transform', `translate(${marginLeft}, ${marginTop + yHeight})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-65)\");\n    chart.append('g')\n      .attr('class', 'yScale')\n      .attr('transform', `translate(${marginLeft}, ${marginTop})`)\n      .call(yAxis)\n\n    chart.append('g')\n      .selectAll(\"dot\")\n      .data(delayedMaxAgeEarnings)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"scatterDot\")\n      .attr(\"cx\", d => xScale(d.age))\n      .attr(\"cy\", d => yScale(d.earnings))\n      .attr(\"transform\", `translate(${marginLeft + 11}, ${marginTop})`)\n    const line = d3.line()\n      .x(d => xScale(d.age))\n      .y(d => yScale(d.earnings))\n      .curve(d3.curveMonotoneX)\n    chart.append('path')\n      .datum(delayedMaxAgeEarnings)\n      .attr('class', 'scatterLine')\n      .attr('transform', `translate(${marginLeft + 11}, ${marginTop})`)\n      .attr('d', line)\n      .style('fill', 'none')\n  }, [maxAge])\n\n  return (\n    <div\n      id=\"container\"\n    >\n      <svg\n        className=\"afterFullAge\"\n        height={height}\n        width={width + marginLeft + 30}\n      />\n      <RangeSlider\n        className=\"RangeSlider\"\n        setParentValue={setMaxAge}\n        range={50}\n        visibleRange={{ min: 70, max: 120 }}\n      />\n    </div>\n  )\n}","import styled from 'styled-components'\n\nexport const DocumentContainer = styled.div`\n  height: 100%;\n  width: 900px;\n  margin: 0 auto;\n  padding: 10px;\n  text-align: center;\n  background: white;\n`\n\nexport const TextContainer = styled.div`\n  margin: 0 auto;\n  text-align: left;\n  width: 700px;\n  padding: 10px;\n`\n\nexport const GraphContainer = styled.div`\n  text-align: center;\n  width: fit-content;\n  margin: 0 auto;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  border: 1px solid lightgrey;\n  // box-shadow: 5px 5px 3px #888888;\n  border-radius: 5px;\n  // background: white;\n  background: rgb(36, 36, 36);\n`","import React, { useState } from 'react'\n\nexport const Dropdown = ({ options, setParentValue }) => {\n  return (\n    <div>\n      <select\n        // value={value}\n        onChange={e => setParentValue(e.target.value)}\n      >\n        {options.map(option => {\n          return <option value={option}>{option}</option>\n          })}\n      </select>\n    </div>\n  )\n}\n\nexport default Dropdown","import React, { useState, useEffect } from \"react\";\nimport {\n  LineGraph,\n  MaxAgeGraph,\n  DelayedMaxAgeGraph,\n} from \"./Components/BenefitsGraphs\";\nimport * as Styled from \"./App.styled\";\nimport \"./App.css\";\nimport { Dropdown } from \"./Components/Dropdown\";\n\nconst birthYears = [\n  \"1943 to 1954\",\n  \"1955\",\n  \"1956\",\n  \"1957\",\n  \"1958\",\n  \"1959\",\n  \"1960 or later\",\n];\n\nconst App = () => {\n  const [birthYear, setBirthYear] = useState(\"1943\");\n  const [monthlyBenefit, setMonthlyBenefit] = useState(1000);\n\n  const handleBirthYearChange = (birthYear) =>\n    setBirthYear(birthYear.slice(0, 4));\n\n  const handleInput = (input) =>\n    parseInt(input) === NaN ? null : setMonthlyBenefit(parseInt(input));\n\n  return (\n    <Styled.DocumentContainer>\n      <h4>What the heck am I looking at?</h4>\n      <Styled.TextContainer>\n        These are a series of graphs meant to make the process of estimating SSI\n        benefits a little less painful. There are three graphs; the first shows\n        an expected monthly amount based on the age in which you decide to begin\n        withdrawing your SSI benefits. The second graph is an estimation of at\n        least how much you could expect to make, <i>in total</i>, from the time\n        you begin withdrawing up to some number of years into the future.\n        Lastly, the third is exactly the same as the second, except that it\n        takes into account <i>delayed</i> retirement benefits, which begin at\n        the full retirement age from 66 (in 1943-1954) to 67 (in 1960) and\n        continue until age 70, at which point they no longer increase.\n      </Styled.TextContainer>\n      <h4>Why?</h4>\n      <Styled.TextContainer>\n        While all of the needed information is clearly given at the official SSA\n        website, it's not terribly straightforward as to what one could\n        reasonably expect only by looking through ages and percentages. By\n        presenting the information in a series of graphs, it becomes <i>much</i>{\" \"}\n        easier to gauge how <i>reduced</i> and <i>delayed</i> benefits actually\n        impact one's future quality of life.\n      </Styled.TextContainer>\n      <h4>Very important disclaimer:</h4>\n      <Styled.TextContainer>\n        These amounts are based on a standard figure of <b>$1,000 per month</b>, multiplied by the standard reductions dependent on the age in which you begin taking out benefits.\n        The SSA does a few extra calculations depending on how much you've made\n        over your past 35 \"best\" working years, including earned and unearned\n        income, whether or not you're a government worker, and so on.\n        Additionally, a <i>Cost-of-Living Adjustment</i> (COLA) is applied to\n        your payments, which is meant to compensate for inflation.{\" \"}\n        <i>There are no such calculations or adjuments here.</i> This is only\n        meant to give an overview of how SSI benefits vary with respect to one's\n        retirement age. All data used for calculating amounts was borrowed from{\" \"}\n        <a href=\"https://www.ssa.gov/benefits/retirement/planner/agereduction.html\">\n          https://www.ssa.gov/benefits/retirement/planner/agereduction.html\n        </a>\n        .\n      </Styled.TextContainer>\n      <br />\n      To get started, select your year of birth:\n      <Dropdown options={birthYears} setParentValue={handleBirthYearChange} />\n      {/* <br />\n        If you've calculated your own monthly benefit amount, please feel free to enter it below, and the numbers will change accordingly:\n        <br />\n      <input\n        defaultValue={1000}\n        onChange={e => handleInput(e.target.value)}\n        style={{\n          width: \"70px\",\n          textAlign: \"center\"\n        }}\n      /> */}\n      <Styled.GraphContainer>\n        <LineGraph\n          key={birthYear}\n          monthlyBenefit={monthlyBenefit}\n          birthYear={birthYear}\n        />\n      </Styled.GraphContainer>\n      <Styled.TextContainer>\n        This is the expected monthly amount at the age in which you begin taking\n        out your benefits.\n      </Styled.TextContainer>\n      <Styled.GraphContainer>\n        <MaxAgeGraph key={birthYear} birthYear={birthYear} />\n      </Styled.GraphContainer>\n      <Styled.TextContainer>\n        This is the total amount you would receive up to a certain age depending\n        on the age in which you begin taking out benefits.\n      </Styled.TextContainer>\n      <Styled.GraphContainer>\n        <DelayedMaxAgeGraph key={birthYear} birthYear={birthYear} />\n      </Styled.GraphContainer>\n        This is a similar graph for benefits taken out after full retirement\n        age.\n      <br />\n    </Styled.DocumentContainer>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}